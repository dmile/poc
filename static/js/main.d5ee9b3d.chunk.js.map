{"version":3,"sources":["theme/index.js","components/toolbar/index.js","components/toolbar/header/index.js","components/toolbar/content/index.js","components/toolbar/content/catalogue/category/index.js","utils/grouping/index.js","components/toolbar/content/catalogue/index.js","components/toolbar/menu/item/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","lighten","common","black","secondary","typography","useNextVariants","Toolbar","_this$props","this","props","header","width","content","react_default","a","createElement","AppBar_default","position","React","Component","ToolbarHeader","state","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","classes","title","onMenuButtonClick","children","buttonsNumber","buttonsPropName","childrenArr","Children","toArray","buttonsChildren","slice","menuChildren","length","Toolbar_default","core_IconButton_default","color","className","menuButton","onClick","Menu_default","Typography_default","variant","noWrap","grow","MoreVert_default","core_Menu_default","getContentAnchorEl","anchorOrigin","vertical","horizontal","open","Boolean","onClose","map","child","cloneElement","asMenuItem","concat","charAt","toUpperCase","defaultProps","buttonsXs","buttonsSm","buttonsMd","buttonsLg","buttonsXl","withStyles","flexGrow","marginRight","ToolbarContent","activeChildIdx","handleTabChange","value","isWidthUpSm","isWidthUp","isWidthUpMd","Fragment","Tabs_default","scrollButtons","onChange","Tab_default","label","icon","key","Category","disableGutters","group","colsNeededArr","colsTotal","colsNeeded","idx","colsCounter","colsNeededArrCounter","colsFree","Catalogue","menu","expanded","handleExpanded","category","indexOf","filter","c","prevProps","_this2","colsPropName","root","renderCategories","Menu_Menu_default","transformOrigin","items","item","categories","isExpanded","renderCategoryMenu","categoriesArr","categoriesForMenu","categoriesMoreThanColumns","count","colsAvailableArr","colsAvailable","isCategoryVisible","isCategoryLast","renderCategory","verticalDivider","catalogue_category","catalogue_EllipsisButton","e","_category$props","core_Button_default","ArrowDropDown_default","fontSize","visibleItems","menuItems","EllipsisButton","_ref","MoreHoriz_default","_category$props2","MenuItem_default","stopPropagation","core_ListItemIcon_default","core_ListItemText_default","inset","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","nested","colsXs","colsSm","colsMd","colsLg","colsXl","Object","defineProperty","minWidth","display","backgroundColor","marginTop","spacing","unit","breakpoints","only","overflow","paddingLeft","name","MenuItemWrapper","objectWithoutProperties","renderActionButtonOrMenuItem","_ref2","otherProps","menuItem","IconButton_default","actionButton","renderToolbarButtonOrMenuItem","_ref4","_ref3","Button_default","toolbarButton","_ref5","assign","ListItemIcon_default","ListItemText_default","toolbar_header","console","log","menu_item","Search_default","Notifications_default","Settings_default","ExitToApp_default","toolbar_content","catalogue","BarChart_default","Brightness1_default","FormatListNumbered_default","FormatListBulleted_default","FormatListNumberedRtl_default","Brightness2_default","FormatBold_default","FormatItalic_default","FormatUnderlined_default","Brightness3_default","FormatIndentDecrease_default","FormatIndentIncrease_default","Brightness4_default","AlternateEmail_default","Brightness5_default","Cloud_default","CloudUpload_default","CloudDownload_default","Brightness6_default","FormatAlignLeft_default","FormatAlignCenter_default","FormatAlignRight_default","FormatAlignJustify_default","Brightness7_default","TextRotationNone_default","TextRotateVertical_default","TextRotateUp_default","TextRotationDown_default","SwapVerticalCircle_default","MusicNote_default","SkipPrevious_default","PlayArrow_default","Pause_default","Stop_default","SkipNext_default","withWidth","_ref6","CssBaseline_default","core_styles","toolbar","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4WA4BeA,EAxBDC,yBAAe,CACzBC,QAAS,CACLC,KAAM,OACNC,QAAS,CACLC,KAAMC,kBAAQC,IAAOC,MAAO,MAEhCC,UAAW,CACPJ,KAAMC,kBAAQC,IAAOC,MAAO,OAGpCE,WAAY,CACRC,iBAAiB,+DCQVC,mLAlBF,IAAAC,EAC4BC,KAAKC,MAAxBC,GADTH,EACEI,MADFJ,EACSG,QAAQE,EADjBL,EACiBK,QACtB,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,SAAS,UACZP,EACAE,UANKM,IAAMC,oHCetBC,6MACFC,MAAQ,CACJC,SAAU,QAGdC,WAAa,SAAAC,GACTC,EAAKC,SAAS,CAACJ,SAAUE,EAAMG,mBAGnCC,YAAc,WACVH,EAAKC,SAAS,CAACJ,SAAU,gFAGpB,IAAAf,EACwDC,KAAKC,MAA3DoB,EADFtB,EACEsB,QAASC,EADXvB,EACWuB,MAAOnB,EADlBJ,EACkBI,MAAOoB,EADzBxB,EACyBwB,kBAAmBC,EAD5CzB,EAC4CyB,SAC3CC,EAAgBzB,KAAKC,MAAMyB,EAAgBvB,IAE3CwB,EAAcjB,IAAMkB,SAASC,QAAQL,GACrCM,EAAkBH,EAAYI,MAAM,EAAGN,GACvCO,EAAeL,EAAYI,MAAMN,EAAeE,EAAYM,QAElE,OACI5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,KACID,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,MAAM,UAAUC,UAAWhB,EAAQiB,WAAYC,QAAShB,GAChElB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,OAEJD,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAYoC,QAAQ,KAAKN,MAAM,UAAUO,QAAM,GAC1CrB,GAELjB,EAAAC,EAAAC,cAAA,OAAK8B,UAAWhB,EAAQuB,OAEpBd,EAGAE,EAAaC,OAAS,GAClB5B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYgB,MAAM,UAAUc,MAAM,UAAUG,QAASvC,KAAKe,YACtDV,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,OAEJD,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACIQ,SAAUd,KAAKa,MAAMC,SACrBiC,mBAAoB,KACpBC,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/CC,KAAMC,QAAQpD,KAAKa,MAAMC,UACzByB,QAASvC,KAAKoB,YACdiC,QAASrD,KAAKoB,aAGVV,IAAMkB,SAAS0B,IAAItB,EAAc,SAAAuB,GAAK,OAClC7C,IAAM8C,aAAaD,EAAO,CAACE,YAAY,gBAjDnD/C,IAAMC,WA4D5Be,EAAkB,SAACvB,GAAD,gBAAAuD,OAAqBvD,EAAMwD,OAAO,GAAGC,eAArCF,OAAqDvD,EAAMwD,OAAO,KAE1F/C,EAAciD,aAAe,CACzBC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,GAoBAC,2BAhGA,SAACjF,GAAD,MAAY,CACvB0D,KAAM,CACFwB,SAAU,GAEd9B,WAAY,CACR+B,YAAa,UA2FNF,CAAmBvD,uCChDnB0D,8MAlDXzD,MAAQ,CACJ0D,eAAgB,KAGpBC,gBAAkB,SAACxD,EAAOyD,GACtBxD,EAAKC,SAAS,CAACqD,eAAgBE,6EAG1B,IACEF,EAAkBvE,KAAKa,MAAvB0D,eADFxE,EAEqBC,KAAKC,MAAxBE,EAFFJ,EAEEI,MAAOqB,EAFTzB,EAESyB,SACRkD,EAAcC,oBAAU,KAAMxE,GAC9ByE,EAAcD,oBAAU,KAAMxE,GAEpC,OACIE,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,SAAP,KACIxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACIoC,QAAQ,aACRqC,cAAeH,EAAc,KAAO,MACpCH,MAAOF,EACPS,SAAUhF,KAAKwE,iBAGX9D,IAAMkB,SAASC,QAAQL,GAAU8B,IAAI,SAAAC,GAAK,OACtClD,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CACI4E,MAAO3B,EAAMtD,MAAMiF,MACnBC,KAAMT,GAAenB,EAAMtD,MAAMkF,KACjCC,IAAG,GAAA1B,OAAKH,EAAM6B,IAAX,WAOf1E,IAAMkB,SAASC,QAAQL,GAAU+C,WApCxB7D,IAAMC,qBCiBpB0E,oLAjBF,IACE7D,EAAYxB,KAAKC,MAAjBuB,SACP,OACInB,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAASgF,gBAAgB,GACpB9D,UANMd,IAAMC,6FCgCd4E,GAzBD,SAACC,EAAeC,GAC1B,GAAID,EAAcvD,OAASwD,EACvB,OAAOD,EAAclC,IAAI,SAACoC,EAAYC,GAAb,OAAuBA,EAAM,GAAMF,EAAa,EAAI,IAE7E,IAAIG,EAAc,EACdC,EAAuB,EAC3B,OAAOL,EAAclC,IAAI,SAACoC,GACtBG,IACA,IAAMC,EAAYL,EAAYG,GAAgBJ,EAAcvD,OAAS4D,GACrE,OAAIC,GAAYJ,GACZE,GAAeF,EACRA,GAEHI,EAAW,GACXF,GAAeE,EACRA,IAEPF,GAAe,EACR,mICUrBG,8MAEFlF,MAAQ,CACJmF,KAAM,KACNC,SAAU,MAGdlF,WAAa,SAACiF,GACV/E,EAAKC,SAAS,CACV8E,YAIR5E,YAAc,WACVH,EAAKC,SAAS,CACV8E,KAAM,KACNC,SAAU,QAIlBC,eAAiB,SAACC,GACd,IAAIF,EAAWhF,EAAKJ,MAAMoF,SAEtBA,GADgC,IAAhCA,EAASG,QAAQD,GACNF,EAASI,OAAO,SAAAC,GAAC,OAAIA,IAAMH,IAE3BF,EAASvC,OAAO,CAACyC,IAEhClF,EAAKC,SAAS,CACV+E,gGAIWM,GACXvG,KAAKC,MAAME,QAAUoG,EAAUpG,OAC/BH,KAAKoB,+CAIJ,IAAAoF,EAAAxG,KAAAD,EAC8BC,KAAKC,MAAjCuB,EADFzB,EACEyB,SAAUH,EADZtB,EACYsB,QAASlB,EADrBJ,EACqBI,MACpBsF,EAAYzF,KAAKC,MAAMwG,GAAatG,IAE1C,OACIE,EAAAC,EAAAC,cAAA,OAAK8B,UAAWhB,EAAQqF,MAEhBC,GAAiBnF,EAAUiE,EAAWzF,KAAKe,WAAYM,GAE1DrB,KAAKa,MAAMmF,MACR3F,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CACIQ,SAAUd,KAAKa,MAAMmF,KAAKlF,SAC1BqC,KAAMC,QAAQpD,KAAKa,MAAMmF,MACzBzD,QAASvC,KAAKoB,YACdiC,QAASrD,KAAKoB,YACd2B,mBAAoB,KACpBC,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C2D,gBAAiB,CAAC5D,SAAU,MAAOC,WAAY,WAG3ClD,KAAKa,MAAMmF,KAAKc,MAAMxD,IAAI,SAACyD,GAAD,OACtBrG,IAAM8C,aAAauD,EAAM,CAACtD,YAAY,MAG1CzD,KAAKa,MAAMmF,KAAKgB,WAAW1D,IAAI,SAAA6C,GAC3B,IAAMc,GAAwD,IAA3CT,EAAK3F,MAAMoF,SAASG,QAAQD,GAC/C,OAAOe,GAAmBf,EAAUc,EAAYT,EAAKN,eAAgB7E,cAhE7EX,IAAMC,WA0ExBgG,GAAmB,SAACK,EAAYvB,EAAW1E,EAAYM,GACzD,IAAM8F,EAAgBzG,IAAMkB,SAASC,QAAQmF,GAEzCI,EAAoB,GAClBC,EAA4BF,EAAclF,OAASwD,EACrD4B,IACAD,EAAoBD,EAAcpF,MAAM0D,EAAY,EAAG0B,EAAclF,SAGzE,IAAMuD,EAAgB2B,EAAc7D,IAAI,SAAA6C,GAAQ,OAC5CzF,IAAMkB,SAAS0F,MAAMnB,EAASlG,MAAMuB,YAClC+F,EAAmBhC,GAAMC,EAAeC,GAK9C,OAJI4B,IACAE,EAAiB9B,EAAY,GAAK,GAG/BpF,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,SAAP,KAECsC,EAAc7D,IAAI,SAAC6C,EAAUR,GACzB,IAAM6B,EAAgBD,EAAiB5B,GACjC8B,EAAoBD,EAAgB,EACpCE,EAAiB/B,IAAQwB,EAAclF,OAAS,EACtD,OAAQwF,GACJpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,SAAP,CAAgBO,IAAG,GAAA1B,OAAKyC,EAASf,IAAd,OACduC,GAAexB,EAAUqB,EAAezG,IACvC2G,GACErH,EAAAC,EAAAC,cAAA,OAAK8B,UAAWhB,EAAQuG,qBAM3CP,GACGhH,EAAAC,EAAAC,cAACsH,GAAD,KACIxH,EAAAC,EAAAC,cAACuH,GAAD,CAAgBvF,QAAS,SAAAwF,GACrB,IAAM/B,EAAO,CACTlF,SAAUiH,EAAE5G,cACZ2F,MAAO,GACPE,WAAYI,GAEhBrG,EAAWiF,SAQzB2B,GAAiB,SAACxB,EAAUqB,EAAezG,GAAe,IAAAiH,EAC5B7B,EAASlG,MAAlCiF,EADqD8C,EACrD9C,MAAOC,EAD8C6C,EAC9C7C,KAAM3D,EADwCwG,EACxCxG,SACdsF,EAAQpG,IAAMkB,SAASC,QAAQL,GACrC,GAAIgG,IAAkBV,EAAM7E,OACxB,OACI5B,EAAAC,EAAAC,cAACsH,GAAD,KACKf,GAGN,GAAsB,IAAlBU,EACP,OACInH,EAAAC,EAAAC,cAACsH,GAAD,CAAUzC,IAAKe,EAASf,KACpB/E,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAQgB,MAAO4D,EAAO9C,MAAM,UAAUG,QAAS,SAACwF,GAC5C,IAAM/B,EAAO,CACTlF,SAAUiH,EAAE5G,cACZ2F,QACAE,WAAY,IAEhBjG,EAAWiF,KAEVb,EACD9E,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAmB6H,SAAS,YAKxC,IAAMC,EAAetB,EAAM/E,MAAM,EAAGyF,EAAgB,GAC9Ca,EAAYvB,EAAM/E,MAAMyF,EAAgB,EAAGV,EAAM7E,QACvD,OACI5B,EAAAC,EAAAC,cAACsH,GAAD,KACKO,EACD/H,EAAAC,EAAAC,cAACuH,GAAD,CAAgBvF,QAAS,SAAAwF,GACrB,IAAM/B,EAAO,CACTlF,SAAUiH,EAAE5G,cACZ2F,MAAOuB,EACPrB,WAAY,IAEhBjG,EAAWiF,QAOzBsC,GAAiB,SAAAC,GAAA,IAAEhG,EAAFgG,EAAEhG,QAAF,OACnBlC,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAQgB,MAAM,UAAUc,MAAM,UAAUG,QAASA,GAC7ClC,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,QAIF4G,GAAqB,SAACf,EAAUc,EAAYf,EAAgB7E,GAAY,IAAAoH,EAC1CtC,EAASlG,MAAlCiF,EADmEuD,EACnEvD,MAAOC,EAD4DsD,EAC5DtD,KAAM3D,EADsDiH,EACtDjH,SAKpB,MAAO,CACHnB,EAAAC,EAAAC,cAACmI,EAAApI,EAAD,CAAU8B,MAAM,UAAUG,QALF,SAACwF,GACzBA,EAAEY,kBACFzC,EAAeC,KAIX9F,EAAAC,EAAAC,cAACqI,GAAAtI,EAAD,KAAe6E,GACf9E,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAcwI,OAAK,EAACxJ,QAAS4F,IAC5B+B,EAAa5G,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,MAAgBD,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,OAGlCD,EAAAC,EAAAC,cAAC0I,GAAA3I,EAAD,CAAU4I,GAAIjC,EAAYkC,QAAQ,OAAOC,eAAa,GAClD/I,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CAAMgJ,gBAAc,GAEZ5I,IAAMkB,SAAS0B,IAAI9B,EAAU,SAAA+B,GAAK,OAC9B7C,IAAM8C,aAAaD,EAAO,CAACE,YAAY,EAAMpB,UAAWhB,EAAQkI,eAQxFxD,GAAUlC,aAAe,CACrB2F,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAiBZ,IAAMnD,GAAe,SAACtG,GAAD,aAAAuD,OAAkBvD,EAAMwD,OAAO,GAAGC,eAAlCF,OAAkDvD,EAAMwD,OAAO,KAGrEQ,wBAnPA,SAACjF,GAAD,MAAY,CACvB0I,gBAAgBiC,OAAAC,GAAA,EAAAD,CAAA,CACZE,SAAU,MACVC,QAAS,OACTvJ,SAAU,WACVwJ,gBAAiBzK,kBAAQN,EAAME,QAAQE,QAAQC,KAAM,KACrD2K,UAAgC,IAArBhL,EAAMiL,QAAQC,MACxBlL,EAAMmL,YAAYC,KAAK,MAAQ,CAC5BJ,UAAWhL,EAAMiL,QAAQC,OAGjC1D,KAAM,CACFsD,QAAS,OACTO,SAAU,SACVN,gBAAiBzK,kBAAQN,EAAME,QAAQE,QAAQC,KAAM,MAEzDgK,OAAQ,CACJiB,YAAkC,EAArBtL,EAAMiL,QAAQC,QAkOD,CAACK,KAAM,WAA1BtG,CAAsC4B,IClPtC2E,oLAfF,IAAA3K,EAC6BC,KAAKC,MACvC,OAAOuB,EAFFzB,EACEyB,UADFqI,OAAAc,EAAA,EAAAd,CAAA9J,EAAA,sBADiBW,IAAMC,4zBC8D9BiK,GAA+B,SAAAC,GAAiC,IAA/BpH,EAA+BoH,EAA/BpH,WAAeqH,EAAgBjB,OAAAc,EAAA,EAAAd,CAAAgB,EAAA,gBAClE,OAAOpH,EAAasH,GAASD,GAPZ,SAAAvC,GAAA,IAAErD,EAAFqD,EAAErD,MAAOC,EAAToD,EAASpD,KAAM5C,EAAfgG,EAAehG,QAAf,OACjBlC,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAYgB,MAAO4D,EAAO9C,MAAM,UAAUG,QAASA,GAC9C4C,GAKsC8F,CAAaH,IAStDI,GAAgC,SAAAC,GAAiC,IAA/B1H,EAA+B0H,EAA/B1H,WAAeqH,EAAgBjB,OAAAc,EAAA,EAAAd,CAAAsB,EAAA,gBACnE,OAAO1H,EAAasH,GAASD,GAPX,SAAAM,GAAA,IAAEjG,EAAFiG,EAAEjG,KAAMD,EAARkG,EAAQlG,MAAO3C,EAAf6I,EAAe7I,QAAf,OAClBlC,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CAAQgB,MAAO4D,EAAO9C,MAAM,UAAUG,QAASA,GAC1C4C,GAKsCmG,CAAcR,IAGvDC,GAAW,SAAAQ,GAAA,IAAEpG,EAAFoG,EAAEpG,KAAMD,EAARqG,EAAQrG,MAAO3C,EAAfgJ,EAAehJ,QAAYuI,EAA3BjB,OAAAc,EAAA,EAAAd,CAAA0B,EAAA,mCACblL,EAAAC,EAAAC,cAACmI,EAAApI,EAADuJ,OAAA2B,OAAA,CAAUpJ,MAAM,UAAUG,QAASA,GAAauI,GAC5CzK,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,KAAe6E,GACf9E,EAAAC,EAAAC,cAACmL,EAAApL,EAAD,CAAcwI,OAAK,EAACxJ,QAAS4F,MAI/BhF,GAAS,SAACC,GAAD,OACXE,EAAAC,EAAAC,cAACoL,EAAD,CAAerK,MAAM,aAAaC,kBAAmBqK,QAAQC,IAAK1L,MAAOA,GACrEE,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAACwL,GAAAzL,EAAD,MAAeiC,QAASqJ,QAAQC,KACzDjB,IAELvK,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,MAAsBiC,QAASqJ,QAAQC,KACvEjB,IAELvK,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC0L,GAAA3L,EAAD,MAAiBiC,QAASqJ,QAAQC,KAC7DjB,IAELvK,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,OAAOC,KAAM9E,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,MAAkBiC,QAASqJ,QAAQC,KAC1DjB,MAKPxK,GAAU,SAACD,GAAD,OACZE,EAAAC,EAAAC,cAAC4L,GAAD,CAAgBhM,MAAOA,GACnBE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,YAAYC,KAAM9E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,MAAiBH,MAAOA,GACvDE,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,cAAcC,KAAM9E,EAAAC,EAAAC,cAAC+L,GAAAhM,EAAD,OAChCD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACgM,GAAAjM,EAAD,MAA2BiC,QAASqJ,QAAQC,KAC5EX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,MAA2BiC,QAASqJ,QAAQC,KAC5EX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,oBAAoBC,KAAM9E,EAAAC,EAAAC,cAACkM,GAAAnM,EAAD,MAA8BiC,QAASqJ,QAAQC,KACnFX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,OAAOC,KAAM9E,EAAAC,EAAAC,cAACmM,GAAApM,EAAD,OACzBD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,cAAcC,KAAM9E,EAAAC,EAAAC,cAACoM,GAAArM,EAAD,MAAmBiC,QAASqJ,QAAQC,KAClEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACqM,GAAAtM,EAAD,MAAqBiC,QAASqJ,QAAQC,KACtEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,oBAAoBC,KAAM9E,EAAAC,EAAAC,cAACsM,GAAAvM,EAAD,MAAyBiC,QAASqJ,QAAQC,KAC9EX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,OAC3BD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,kBAAkBC,KAAM9E,EAAAC,EAAAC,cAACwM,GAAAzM,EAAD,MAA6BiC,QAASqJ,QAAQC,KAChFX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,kBAAkBC,KAAM9E,EAAAC,EAAAC,cAACyM,GAAA1M,EAAD,MAA6BiC,QAASqJ,QAAQC,KAChFX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,OAC3BD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,aAAaC,KAAM9E,EAAAC,EAAAC,cAAC2M,GAAA5M,EAAD,MAAuBiC,QAASqJ,QAAQC,KACrEX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,QAAQC,KAAM9E,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,OAC1BD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,UAAUC,KAAM9E,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,MAAciC,QAASqJ,QAAQC,KACzDX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,MAAoBiC,QAASqJ,QAAQC,KAC9DX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,MAAsBiC,QAASqJ,QAAQC,KAClEX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,iBAAiBC,KAAM9E,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,OACnCD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,aAAaC,KAAM9E,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,MAAwBiC,QAASqJ,QAAQC,KACtEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,eAAeC,KAAM9E,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,MAA0BiC,QAASqJ,QAAQC,KAC1EX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,cAAcC,KAAM9E,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,MAAyBiC,QAASqJ,QAAQC,KACxEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACoN,GAAArN,EAAD,MAA2BiC,QAASqJ,QAAQC,KAC5EX,KAGT7K,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACqN,GAAAtN,EAAD,OAClCD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACsN,GAAAvN,EAAD,MAAyBiC,QAASqJ,QAAQC,KAC1EX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,kBAAkBC,KAAM9E,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,MAA2BiC,QAASqJ,QAAQC,KAC9EX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,YAAYC,KAAM9E,EAAAC,EAAAC,cAACwN,GAAAzN,EAAD,MAAqBiC,QAASqJ,QAAQC,KAClEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,gBAAgBC,KAAM9E,EAAAC,EAAAC,cAACyN,GAAA1N,EAAD,MAAyBiC,QAASqJ,QAAQC,KAC1EX,MAIb7K,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MAA2BH,MAAOA,GAC9DE,EAAAC,EAAAC,cAACsH,GAAD,CAAU3C,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,OAC3BD,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,MAAqBiC,QAASqJ,QAAQC,KACjEX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,OAAOC,KAAM9E,EAAAC,EAAAC,cAAC6N,GAAA9N,EAAD,MAAkBiC,QAASqJ,QAAQC,KAC1DX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,QAAQC,KAAM9E,EAAAC,EAAAC,cAAC8N,GAAA/N,EAAD,MAAciC,QAASqJ,QAAQC,KACvDX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,OAAOC,KAAM9E,EAAAC,EAAAC,cAAC+N,GAAAhO,EAAD,MAAaiC,QAASqJ,QAAQC,KACrDX,IAEL7K,EAAAC,EAAAC,cAACuL,GAAD,CAAS5G,MAAM,OAAOC,KAAM9E,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,MAAiBiC,QAASqJ,QAAQC,KACzDX,MAIb7K,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MAA2BH,MAAOA,IAClEE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,MAAiBH,MAAOA,IAC1DE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,UAAUC,KAAM9E,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MAA2BH,MAAOA,IACnEE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,UAAUC,KAAM9E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,MAAiBH,MAAOA,IACzDE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,SAASC,KAAM9E,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MAA2BH,MAAOA,IAClEE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,MAAiBH,MAAOA,IAC1DE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,WAAWC,KAAM9E,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MAA2BH,MAAOA,IACpEE,EAAAC,EAAAC,cAAC6L,GAAD,CAAWlH,MAAM,UAAUC,KAAM9E,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,MAAiBH,MAAOA,MAgBlDqO,SAXH,SAAAC,GAAA,IAAEtO,EAAFsO,EAAEtO,MAAF,OACRE,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,SAAP,KACIxE,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,KACID,EAAAC,EAAAC,cAACoO,EAAA,iBAAD,CAAkBzP,MAAOA,GACrBmB,EAAAC,EAAAC,cAACqO,EAAD,CAAS1O,OAAQA,GAAOC,GAAQC,QAASA,GAAQD,GAAQA,MAAOA,SC5M5DiD,QACW,cAA7ByL,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7O,EAAAC,EAAAC,cAAC4O,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d5ee9b3d.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport common from \"@material-ui/core/colors/common\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: lighten(common.black, 0.13)\n        },\n        secondary: {\n            main: lighten(common.black, 0.84)\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n    // breakpoints: {\n    //     values: {\n    //         xs: 0,\n    //         sm: 600,\n    //         md: 840,\n    //         lg: 1284,\n    //         xl: 1920\n    //     }\n    // }\n});\n\nexport default theme;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\n\nclass Toolbar extends React.Component {\n    render() {\n        const {width, header, content} = this.props;\n        return (\n            <AppBar position=\"static\">\n                {header}\n                {content}\n            </AppBar>\n        );\n    }\n}\n\n\nToolbar.propTypes = {\n    header: PropTypes.node,\n    content: PropTypes.node,\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n};\n\nexport default Toolbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = (theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: '12px'\n    }\n});\n\nclass ToolbarHeader extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenu = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render() {\n        const {classes, title, width, onMenuButtonClick, children} = this.props;\n        const buttonsNumber = this.props[buttonsPropName(width)];\n\n        const childrenArr = React.Children.toArray(children);\n        const buttonsChildren = childrenArr.slice(0, buttonsNumber);\n        const menuChildren = childrenArr.slice(buttonsNumber, childrenArr.length);\n\n        return (\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={onMenuButtonClick}>\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    {title}\n                </Typography>\n                <div className={classes.grow}/>\n                {\n                    buttonsChildren\n                }\n                {\n                    menuChildren.length > 0 && (\n                        <div>\n                            <IconButton title=\"More...\" color=\"inherit\" onClick={this.handleMenu}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                            <Menu\n                                anchorEl={this.state.anchorEl}\n                                getContentAnchorEl={null}\n                                anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n                                open={Boolean(this.state.anchorEl)}\n                                onClick={this.handleClose}\n                                onClose={this.handleClose}\n                            >\n                                {\n                                    React.Children.map(menuChildren, child =>\n                                        React.cloneElement(child, {asMenuItem: true}))\n                                }\n                            </Menu>\n                        </div>\n                    )\n                }\n            </Toolbar>\n        );\n    }\n}\n\nconst buttonsPropName = (width) => `buttons${width.charAt(0).toUpperCase()}${width.charAt(1)}`;\n\nToolbarHeader.defaultProps = {\n    buttonsXs: 0,\n    buttonsSm: 2,\n    buttonsMd: 2,\n    buttonsLg: 2,\n    buttonsXl: 2\n};\n\n\nToolbarHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    buttonsXs: PropTypes.number,\n    buttonsSm: PropTypes.number,\n    buttonsMd: PropTypes.number,\n    buttonsLg: PropTypes.number,\n    buttonsXl: PropTypes.number,\n    title: PropTypes.string.isRequired,\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    onMenuButtonClick: PropTypes.func.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default withStyles(styles)(ToolbarHeader);","import React from 'react';\nimport Tab from \"@material-ui/core/Tab/Tab\";\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\nimport PropTypes from 'prop-types';\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\n\nclass ToolbarContent extends React.Component {\n\n    state = {\n        activeChildIdx: 0\n    };\n\n    handleTabChange = (event, value) => {\n        this.setState({activeChildIdx: value});\n    };\n\n    render() {\n        const {activeChildIdx} = this.state;\n        const {width, children} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n        const isWidthUpMd = isWidthUp('md', width);\n\n        return (\n            <React.Fragment>\n                <Tabs\n                    variant=\"scrollable\"\n                    scrollButtons={isWidthUpMd ? \"on\" : \"off\"}\n                    value={activeChildIdx}\n                    onChange={this.handleTabChange}\n                >\n                    {\n                        React.Children.toArray(children).map(child =>\n                            <Tab\n                                label={child.props.label}\n                                icon={isWidthUpSm && child.props.icon}\n                                key={`${child.key}_t`}\n                            />\n                        )\n                    }\n\n                </Tabs>\n                {\n                    React.Children.toArray(children)[activeChildIdx]\n                }\n            </React.Fragment>\n        );\n    }\n\n}\n\nToolbarContent.propTypes = {\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default ToolbarContent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nclass Category extends React.Component {\n\n    render() {\n        const {children} = this.props;\n        return (\n            <Toolbar disableGutters={true}>\n                {children}\n            </Toolbar>\n        );\n    }\n}\n\nCategory.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default Category;","/**\n * Calculate number of available columns (group category items)\n *\n * @param colsNeededArr - array of items numbers per each category\n *\n *  [[item, item, item], [item], [item, item]] ===> [3, 1, 2]\n *\n * @param colsTotal - total number of columns\n *\n * @returns array of column numbers available per each category\n */\nconst group = (colsNeededArr, colsTotal) => {\n    if (colsNeededArr.length > colsTotal) {\n        return colsNeededArr.map((colsNeeded, idx) => ((idx + 1) <= colsTotal) ? 1 : 0);\n    } else {\n        let colsCounter = 0;\n        let colsNeededArrCounter = 0;\n        return colsNeededArr.map((colsNeeded) => {\n            colsNeededArrCounter++;\n            const colsFree = (colsTotal - colsCounter) - (colsNeededArr.length - colsNeededArrCounter);\n            if (colsFree >= colsNeeded) {\n                colsCounter += colsNeeded;\n                return colsNeeded;\n            } else {\n                if (colsFree > 1) {\n                    colsCounter += colsFree;\n                    return colsFree;\n                } else {\n                    colsCounter += 1;\n                    return 1;\n                }\n            }\n        });\n    }\n};\n\nexport default group;","import React from 'react';\nimport Category from \"./category\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from \"@material-ui/core/Menu/Menu\";\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport group from '../../../../utils/grouping'\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\n\nconst styles = (theme) => ({\n    verticalDivider: {\n        minWidth: '1px',\n        display: 'flex',\n        position: 'relative',\n        backgroundColor: lighten(theme.palette.primary.main, 0.25),\n        marginTop: theme.spacing.unit * 1.5,\n        [theme.breakpoints.only('xs')]: {\n            marginTop: theme.spacing.unit\n        }\n    },\n    root: {\n        display: 'flex',\n        overflow: 'hidden',\n        backgroundColor: lighten(theme.palette.primary.main, 0.37)\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    }\n});\n\nclass Catalogue extends React.Component {\n\n    state = {\n        menu: null,\n        expanded: []\n    };\n\n    handleMenu = (menu) => {\n        this.setState({\n            menu\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            menu: null,\n            expanded: []\n        });\n    };\n\n    handleExpanded = (category) => {\n        let expanded = this.state.expanded;\n        if (expanded.indexOf(category) !== -1) {\n            expanded = expanded.filter(c => c !== category);\n        } else {\n            expanded = expanded.concat([category]);\n        }\n        this.setState({\n            expanded\n        });\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.width !== prevProps.width) {\n            this.handleClose();\n        }\n    }\n\n    render() {\n        const {children, classes, width} = this.props;\n        const colsTotal = this.props[colsPropName(width)];\n\n        return (\n            <div className={classes.root}>\n                {\n                    renderCategories(children, colsTotal, this.handleMenu, classes)\n                }\n                {this.state.menu && (\n                    <Menu\n                        anchorEl={this.state.menu.anchorEl}\n                        open={Boolean(this.state.menu)}\n                        onClick={this.handleClose}\n                        onClose={this.handleClose}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                        transformOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                    >\n                        {\n                            this.state.menu.items.map((item) =>\n                                React.cloneElement(item, {asMenuItem: true}))\n                        }\n                        {\n                            this.state.menu.categories.map(category => {\n                                const isExpanded = this.state.expanded.indexOf(category) !== -1;\n                                return renderCategoryMenu(category, isExpanded, this.handleExpanded, classes)\n                            })\n                        }\n                    </Menu>)\n                }\n            </div>\n        );\n    }\n}\n\nconst renderCategories = (categories, colsTotal, handleMenu, classes) => {\n    const categoriesArr = React.Children.toArray(categories);\n\n    let categoriesForMenu = [];\n    const categoriesMoreThanColumns = categoriesArr.length > colsTotal;\n    if (categoriesMoreThanColumns) {\n        categoriesForMenu = categoriesArr.slice(colsTotal - 1, categoriesArr.length);\n    }\n\n    const colsNeededArr = categoriesArr.map(category =>\n        React.Children.count(category.props.children));\n    const colsAvailableArr = group(colsNeededArr, colsTotal);\n    if (categoriesMoreThanColumns) {\n        colsAvailableArr[colsTotal - 1] = 0; // free last col for ellipsis\n    }\n\n    return <React.Fragment>\n        {\n            categoriesArr.map((category, idx) => {\n                const colsAvailable = colsAvailableArr[idx];\n                const isCategoryVisible = colsAvailable > 0;\n                const isCategoryLast = idx === categoriesArr.length - 1;\n                return (isCategoryVisible && (\n                    <React.Fragment key={`${category.key}_f`}>\n                        {renderCategory(category, colsAvailable, handleMenu)}\n                        {!isCategoryLast && (\n                            <div className={classes.verticalDivider}/>\n                        )}\n                    </React.Fragment>\n                ))\n            })\n        }\n        {categoriesMoreThanColumns && (\n            <Category>\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: [],\n                        categories: categoriesForMenu\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>)\n        }\n    </React.Fragment>\n\n};\n\nconst renderCategory = (category, colsAvailable, handleMenu) => {\n    const {label, icon, children} = category.props;\n    const items = React.Children.toArray(children);\n    if (colsAvailable === items.length) {\n        return (\n            <Category>\n                {items}\n            </Category>\n        )\n    } else if (colsAvailable === 1) {\n        return (\n            <Category key={category.key}>\n                <Button title={label} color=\"inherit\" onClick={(e) => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items,\n                        categories: []\n                    };\n                    handleMenu(menu)\n                }}>\n                    {icon}\n                    <ArrowDropDownIcon fontSize=\"small\"/>\n                </Button>\n            </Category>\n        )\n    } else {\n        const visibleItems = items.slice(0, colsAvailable - 1); // one column per ellipsis\n        const menuItems = items.slice(colsAvailable - 1, items.length);\n        return (\n            <Category>\n                {visibleItems}\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: menuItems,\n                        categories: []\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>\n        )\n    }\n};\n\nconst EllipsisButton = ({onClick}) => (\n    <Button title=\"More...\" color=\"inherit\" onClick={onClick}>\n        <MoreHorizIcon/>\n    </Button>\n);\n\nconst renderCategoryMenu = (category, isExpanded, handleExpanded, classes) => {\n    const {label, icon, children} = category.props;\n    const onCategoryItemClick = (e) => {\n        e.stopPropagation(); // prevent menu from closing\n        handleExpanded(category);\n    };\n    return [\n        <MenuItem color=\"inherit\" onClick={onCategoryItemClick}>\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText inset primary={label}/>\n            {isExpanded ? <ExpandLess/> : <ExpandMore/>}\n        </MenuItem>\n        ,\n        <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n            <List disablePadding>\n                {\n                    React.Children.map(children, child =>\n                        React.cloneElement(child, {asMenuItem: true, className: classes.nested})\n                    )\n                }\n            </List>\n        </Collapse>\n    ]\n};\n\nCatalogue.defaultProps = {\n    colsXs: 5,\n    colsSm: 9,\n    colsMd: 13,\n    colsLg: 18,\n    colsXl: 25\n};\n\nCatalogue.propTypes = {\n    classes: PropTypes.object.isRequired,\n    colsXs: PropTypes.number,\n    colsSm: PropTypes.number,\n    colsMd: PropTypes.number,\n    colsLg: PropTypes.number,\n    colsXl: PropTypes.number,\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nconst colsPropName = (width) => `cols${width.charAt(0).toUpperCase()}${width.charAt(1)}`;\n\n//TODO simplify renderCategory and menu staff\nexport default withStyles(styles, {name: 'MuiTabs'})(Catalogue);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MenuItemWrapper extends React.Component {\n    render() {\n        const {children, ...otherProps} = this.props;\n        return children(otherProps);\n    }\n}\n\n\nMenuItemWrapper.propTypes = {\n    asMenuItem: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    icon: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.func.isRequired\n};\n\nexport default MenuItemWrapper;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport theme from './theme'\nimport Toolbar from './components/toolbar/';\nimport ToolbarHeader from './components/toolbar/header'\nimport ToolbarContent from './components/toolbar/content'\nimport Catalogue from './components/toolbar/content/catalogue'\nimport Category from './components/toolbar/content/catalogue/category'\nimport ItemHoc from './components/toolbar/menu/item'\n\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatIndentDecreaseIcon from '@material-ui/icons/FormatIndentDecrease';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone';\nimport TextRotateVerticalIcon from '@material-ui/icons/TextRotateVertical';\nimport TextRotateUpIcon from '@material-ui/icons/TextRotateUp';\nimport TextRotationDownIcon from '@material-ui/icons/TextRotationDown';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport MusicNote from '@material-ui/icons/MusicNote';\n\n\nconst actionButton = ({label, icon, onClick}) => (\n    <IconButton title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </IconButton>\n);\n\nconst renderActionButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : actionButton(otherProps);\n};\n\nconst toolbarButton = ({icon, label, onClick}) => (\n    <Button title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </Button>\n);\n\nconst renderToolbarButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : toolbarButton(otherProps);\n};\n\nconst menuItem = ({icon, label, onClick, ...otherProps}) => (\n    <MenuItem color=\"inherit\" onClick={onClick} {...otherProps}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText inset primary={label}/>\n    </MenuItem>\n);\n\nconst header = (width) => (\n    <ToolbarHeader title=\"Page Title\" onMenuButtonClick={console.log} width={width}>\n        <ItemHoc label=\"Search\" icon={<SearchIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Notifications\" icon={<NotificationsIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Settings\" icon={<SettingsIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Exit\" icon={<ExitToAppIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n    </ToolbarHeader>\n);\n\nconst content = (width) => (\n    <ToolbarContent width={width}>\n        <Catalogue label=\"Catalogue\" icon={<BarChartIcon/>} width={width}>\n            <Category label=\"List format\" icon={<Brightness1Icon/>}>\n                <ItemHoc label=\"List numbered\" icon={<FormatListNumberedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"List bulleted\" icon={<FormatListBulletedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"List numbered rtl\" icon={<FormatListNumberedRtlIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Font\" icon={<Brightness2Icon/>}>\n                <ItemHoc label=\"Format bold\" icon={<FormatBoldIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Format italic\" icon={<FormatItalicIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Format underlined\" icon={<FormatUnderlinedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Indent\" icon={<Brightness3Icon/>}>\n                <ItemHoc label=\"Indent decrease\" icon={<FormatIndentDecreaseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Indent increase\" icon={<FormatIndentIncreaseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Emails\" icon={<Brightness4Icon/>}>\n                <ItemHoc label=\"Just email\" icon={<AlternateEmailIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Cloud\" icon={<Brightness5Icon/>}>\n                <ItemHoc label=\"Default\" icon={<CloudIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Upload\" icon={<CloudUploadIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Download\" icon={<CloudDownloadIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Text alignment\" icon={<Brightness6Icon/>}>\n                <ItemHoc label=\"Align left\" icon={<FormatAlignLeftIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align center\" icon={<FormatAlignCenterIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align right\" icon={<FormatAlignRightIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align justify\" icon={<FormatAlignJustifyIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Text rotation\" icon={<Brightness7Icon/>}>\n                <ItemHoc label=\"Rotation none\" icon={<TextRotationNoneIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotate vertical\" icon={<TextRotateVerticalIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotate up\" icon={<TextRotateUpIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotation down\" icon={<TextRotationDownIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n        </Catalogue>\n        <Catalogue label=\"Cattwo\" icon={<SwapVerticalCircleIcon/>} width={width}>\n            <Category label=\"Player\" icon={<MusicNote/>}>\n                <ItemHoc label=\"Previous\" icon={<SkipPreviousIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Play\" icon={<PlayArrowIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Pause\" icon={<PauseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Stop\" icon={<StopIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Next\" icon={<SkipNextIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n        </Catalogue>\n        <Catalogue label=\"Cattwo\" icon={<SwapVerticalCircleIcon/>} width={width}/>\n        <Catalogue label=\"Catthree\" icon={<BarChartIcon/>} width={width}/>\n        <Catalogue label=\"Catfour\" icon={<SwapVerticalCircleIcon/>} width={width}/>\n        <Catalogue label=\"Catfive\" icon={<BarChartIcon/>} width={width}/>\n        <Catalogue label=\"Catsix\" icon={<SwapVerticalCircleIcon/>} width={width}/>\n        <Catalogue label=\"Catseven\" icon={<BarChartIcon/>} width={width}/>\n        <Catalogue label=\"Cateight\" icon={<SwapVerticalCircleIcon/>} width={width}/>\n        <Catalogue label=\"Catnine\" icon={<BarChartIcon/>} width={width}/>\n    </ToolbarContent>\n);\n\n\nconst App = ({width}) => (\n    <React.Fragment>\n        <CssBaseline>\n            <MuiThemeProvider theme={theme}>\n                <Toolbar header={header(width)} content={content(width)} width={width}/>\n            </MuiThemeProvider>\n        </CssBaseline>\n    </React.Fragment>\n);\n\n//TODO fix width property passing\nexport default withWidth()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}