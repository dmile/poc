{"version":3,"sources":["theme/index.js","utils/context/width/WidthContext.js","utils/context/width/WidthProvider.js","components/toolbar/index.js","utils/context/width/withWidth.js","components/toolbar/header/index.js","components/toolbar/content/index.js","components/toolbar/content/catalogue/category/index.js","utils/grouping/index.js","components/toolbar/content/catalogue/index.js","components/toolbar/menu/item/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","lighten","common","black","secondary","typography","useNextVariants","WidthContext","React","createContext","width","WidthProvider","_this$props","this","props","children","react_default","a","createElement","width_WidthContext","Provider","value","Component","withWidth","Toolbar","header","content","AppBar_default","position","width_WidthProvider","_React$Component","WithWidthHoc","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this","react","Consumer","_ref","assign","ToolbarHeader","state","anchorEl","handleMenu","event","setState","currentTarget","handleClose","classes","title","onMenuButtonClick","buttonsNumber","buttonsPropName","childrenArr","Children","toArray","buttonsChildren","slice","menuChildren","length","Toolbar_default","core_IconButton_default","color","className","menuButton","onClick","Menu_default","Typography_default","variant","noWrap","grow","MoreVert_default","core_Menu_default","getContentAnchorEl","anchorOrigin","vertical","horizontal","open","Boolean","onClose","map","child","cloneElement","asMenuItem","concat","charAt","toUpperCase","defaultProps","buttonsXs","buttonsSm","buttonsMd","buttonsLg","buttonsXl","withStyles","flexGrow","marginRight","ToolbarContent","activeChildIdx","handleTabChange","isWidthUpSm","isWidthUp","isWidthUpMd","Fragment","Tabs_default","scrollButtons","onChange","Tab_default","label","icon","Category","disableGutters","group","colsNeededArr","colsTotal","colsNeeded","idx","colsCounter","colsNeededArrCounter","colsFree","Catalogue","menu","expanded","handleExpanded","category","indexOf","filter","c","prevProps","_this2","colsPropName","root","renderCategories","Menu_Menu_default","transformOrigin","items","item","categories","isExpanded","renderCategoryMenu","categoriesArr","categoriesForMenu","categoriesMoreThanColumns","count","colsAvailableArr","colsAvailable","isCategoryVisible","isCategoryLast","renderCategory","verticalDivider","catalogue_category","catalogue_EllipsisButton","e","_category$props","core_Button_default","ArrowDropDown_default","fontSize","visibleItems","menuItems","EllipsisButton","MoreHoriz_default","_category$props2","MenuItem_default","stopPropagation","core_ListItemIcon_default","core_ListItemText_default","inset","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","nested","colsXs","colsSm","colsMd","colsLg","colsXl","defineProperty","minWidth","display","backgroundColor","marginTop","spacing","unit","breakpoints","only","overflow","paddingLeft","name","MenuItemWrapper","objectWithoutProperties","renderActionButtonOrMenuItem","_ref2","otherProps","menuItem","IconButton_default","actionButton","renderToolbarButtonOrMenuItem","_ref4","_ref3","Button_default","toolbarButton","_ref5","ListItemIcon_default","ListItemText_default","toolbar_header","console","log","menu_item","Search_default","Notifications_default","Settings_default","ExitToApp_default","toolbar_content","catalogue","BarChart_default","Brightness1_default","FormatListNumbered_default","FormatListBulleted_default","FormatListNumberedRtl_default","Brightness2_default","FormatBold_default","FormatItalic_default","FormatUnderlined_default","Brightness3_default","FormatIndentDecrease_default","FormatIndentIncrease_default","Brightness4_default","AlternateEmail_default","Brightness5_default","Cloud_default","CloudUpload_default","CloudDownload_default","Brightness6_default","FormatAlignLeft_default","FormatAlignCenter_default","FormatAlignRight_default","FormatAlignJustify_default","Brightness7_default","TextRotationNone_default","TextRotateVertical_default","TextRotateUp_default","TextRotationDown_default","SwapVerticalCircle_default","MusicNote_default","SkipPrevious_default","PlayArrow_default","Pause_default","Stop_default","SkipNext_default","App","CssBaseline_default","core_styles","toolbar","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da6be357.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport common from \"@material-ui/core/colors/common\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: lighten(common.black, 0.13)\n        },\n        secondary: {\n            main: lighten(common.black, 0.84)\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n    // breakpoints: {\n    //     values: {\n    //         xs: 0,\n    //         sm: 600,\n    //         md: 840,\n    //         lg: 1284,\n    //         xl: 1920\n    //     }\n    // }\n});\n\nexport default theme;","import React from 'react';\n\nconst WidthContext = React.createContext({width: 'lg'});\n\nexport default WidthContext;","import React from \"react\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport WidthContext from \"./WidthContext\";\n\nclass WidthProvider extends React.Component {\n    render() {\n        const {width, children} = this.props;\n        return (\n            <WidthContext.Provider value={{width}}>\n                {children}\n            </WidthContext.Provider>\n        )\n    }\n}\n\nexport default withWidth()(WidthProvider);\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\n\nimport WidthProvider from \"../../utils/context/width/WidthProvider\";\n\nclass Toolbar extends React.Component {\n    render() {\n        const {header, content} = this.props;\n        return (\n            <AppBar position=\"static\">\n                <WidthProvider>\n                    {header}\n                    {content}\n                </WidthProvider>\n            </AppBar>\n        );\n    }\n}\n\n\nToolbar.propTypes = {\n    header: PropTypes.node,\n    content: PropTypes.node\n};\n\nexport default Toolbar;","import * as React from 'react';\nimport WidthContext from './WidthContext';\n\nconst withWidth = () => (Component) => {\n    class WithWidthHoc extends React.Component {\n        render() {\n            return (\n                <WidthContext.Consumer>\n                    {({width}) =>\n                        <Component {...this.props} width={width}/>\n                    }\n                </WidthContext.Consumer>\n            )\n        }\n    }\n\n    return WithWidthHoc;\n};\n\nexport default withWidth;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\n\nimport withWidth from '../../../utils/context/width/withWidth';\n\nconst styles = (theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: '12px'\n    }\n});\n\nclass ToolbarHeader extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenu = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render() {\n        const {classes, title, width, onMenuButtonClick, children} = this.props;\n        const buttonsNumber = this.props[buttonsPropName(width)];\n\n        const childrenArr = React.Children.toArray(children);\n        const buttonsChildren = childrenArr.slice(0, buttonsNumber);\n        const menuChildren = childrenArr.slice(buttonsNumber, childrenArr.length);\n\n        return (\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={onMenuButtonClick}>\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    {title}\n                </Typography>\n                <div className={classes.grow}/>\n                {\n                    buttonsChildren\n                }\n                {\n                    menuChildren.length > 0 && (\n                        <div>\n                            <IconButton title=\"More...\" color=\"inherit\" onClick={this.handleMenu}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                            <Menu\n                                anchorEl={this.state.anchorEl}\n                                getContentAnchorEl={null}\n                                anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n                                open={Boolean(this.state.anchorEl)}\n                                onClick={this.handleClose}\n                                onClose={this.handleClose}\n                            >\n                                {\n                                    React.Children.map(menuChildren, child =>\n                                        React.cloneElement(child, {asMenuItem: true}))\n                                }\n                            </Menu>\n                        </div>\n                    )\n                }\n            </Toolbar>\n        );\n    }\n}\n\nconst buttonsPropName = (width) => `buttons${width.charAt(0).toUpperCase()}${width.charAt(1)}`;\n\nToolbarHeader.defaultProps = {\n    buttonsXs: 0,\n    buttonsSm: 2,\n    buttonsMd: 2,\n    buttonsLg: 2,\n    buttonsXl: 2\n};\n\n\nToolbarHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    buttonsXs: PropTypes.number,\n    buttonsSm: PropTypes.number,\n    buttonsMd: PropTypes.number,\n    buttonsLg: PropTypes.number,\n    buttonsXl: PropTypes.number,\n    title: PropTypes.string.isRequired,\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    onMenuButtonClick: PropTypes.func.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default withWidth()(withStyles(styles)(ToolbarHeader));","import React from 'react';\nimport Tab from \"@material-ui/core/Tab/Tab\";\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\nimport PropTypes from 'prop-types';\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\n\nimport withWidth from '../../../utils/context/width/withWidth';\n\nclass ToolbarContent extends React.Component {\n\n    state = {\n        activeChildIdx: 0\n    };\n\n    handleTabChange = (event, value) => {\n        this.setState({activeChildIdx: value});\n    };\n\n    render() {\n        const {activeChildIdx} = this.state;\n        const {width, children} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n        const isWidthUpMd = isWidthUp('md', width);\n\n        return (\n            <React.Fragment>\n                <Tabs\n                    variant=\"scrollable\"\n                    scrollButtons={isWidthUpMd ? \"on\" : \"off\"}\n                    value={activeChildIdx}\n                    onChange={this.handleTabChange}\n                >\n                    {\n                        React.Children.toArray(children).map(child =>\n                            <Tab\n                                label={child.props.label}\n                                icon={isWidthUpSm && child.props.icon}\n                                key={`${child.key}_t`}\n                            />\n                        )\n                    }\n\n                </Tabs>\n                {\n                    React.Children.toArray(children)[activeChildIdx]\n                }\n            </React.Fragment>\n        );\n    }\n\n}\n\nToolbarContent.propTypes = {\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default withWidth()(ToolbarContent);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nclass Category extends React.Component {\n\n    render() {\n        const {children} = this.props;\n        return (\n            <Toolbar disableGutters={true}>\n                {children}\n            </Toolbar>\n        );\n    }\n}\n\nCategory.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default Category;","/**\n * Calculate number of available columns (group category items)\n *\n * @param colsNeededArr - array of items numbers per each category\n *\n *  [[item, item, item], [item], [item, item]] ===> [3, 1, 2]\n *\n * @param colsTotal - total number of columns\n *\n * @returns array of column numbers available per each category\n */\nconst group = (colsNeededArr, colsTotal) => {\n    if (colsNeededArr.length > colsTotal) {\n        return colsNeededArr.map((colsNeeded, idx) => ((idx + 1) <= colsTotal) ? 1 : 0);\n    } else {\n        let colsCounter = 0;\n        let colsNeededArrCounter = 0;\n        return colsNeededArr.map((colsNeeded) => {\n            colsNeededArrCounter++;\n            const colsFree = (colsTotal - colsCounter) - (colsNeededArr.length - colsNeededArrCounter);\n            if (colsFree >= colsNeeded) {\n                colsCounter += colsNeeded;\n                return colsNeeded;\n            } else {\n                if (colsFree > 1) {\n                    colsCounter += colsFree;\n                    return colsFree;\n                } else {\n                    colsCounter += 1;\n                    return 1;\n                }\n            }\n        });\n    }\n};\n\nexport default group;","import React from 'react';\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from \"@material-ui/core/Menu/Menu\";\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\n\nimport Category from \"./category\";\nimport group from '../../../../utils/grouping'\nimport withWidth from '../../../../utils/context/width/withWidth';\n\nconst styles = (theme) => ({\n    verticalDivider: {\n        minWidth: '1px',\n        display: 'flex',\n        position: 'relative',\n        backgroundColor: lighten(theme.palette.primary.main, 0.25),\n        marginTop: theme.spacing.unit * 1.5,\n        [theme.breakpoints.only('xs')]: {\n            marginTop: theme.spacing.unit\n        }\n    },\n    root: {\n        display: 'flex',\n        overflow: 'hidden',\n        backgroundColor: lighten(theme.palette.primary.main, 0.37)\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    }\n});\n\nclass Catalogue extends React.Component {\n\n    state = {\n        menu: null,\n        expanded: []\n    };\n\n    handleMenu = (menu) => {\n        this.setState({\n            menu\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            menu: null,\n            expanded: []\n        });\n    };\n\n    handleExpanded = (category) => {\n        let expanded = this.state.expanded;\n        if (expanded.indexOf(category) !== -1) {\n            expanded = expanded.filter(c => c !== category);\n        } else {\n            expanded = expanded.concat([category]);\n        }\n        this.setState({\n            expanded\n        });\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.width !== prevProps.width) {\n            this.handleClose();\n        }\n    }\n\n    render() {\n        const {children, classes, width} = this.props;\n        const colsTotal = this.props[colsPropName(width)];\n\n        return (\n            <div className={classes.root}>\n                {\n                    renderCategories(children, colsTotal, this.handleMenu, classes)\n                }\n                {this.state.menu && (\n                    <Menu\n                        anchorEl={this.state.menu.anchorEl}\n                        open={Boolean(this.state.menu)}\n                        onClick={this.handleClose}\n                        onClose={this.handleClose}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                        transformOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                    >\n                        {\n                            this.state.menu.items.map((item) =>\n                                React.cloneElement(item, {asMenuItem: true}))\n                        }\n                        {\n                            this.state.menu.categories.map(category => {\n                                const isExpanded = this.state.expanded.indexOf(category) !== -1;\n                                return renderCategoryMenu(category, isExpanded, this.handleExpanded, classes)\n                            })\n                        }\n                    </Menu>)\n                }\n            </div>\n        );\n    }\n}\n\nconst renderCategories = (categories, colsTotal, handleMenu, classes) => {\n    const categoriesArr = React.Children.toArray(categories);\n\n    let categoriesForMenu = [];\n    const categoriesMoreThanColumns = categoriesArr.length > colsTotal;\n    if (categoriesMoreThanColumns) {\n        categoriesForMenu = categoriesArr.slice(colsTotal - 1, categoriesArr.length);\n    }\n\n    const colsNeededArr = categoriesArr.map(category =>\n        React.Children.count(category.props.children));\n    const colsAvailableArr = group(colsNeededArr, colsTotal);\n    if (categoriesMoreThanColumns) {\n        colsAvailableArr[colsTotal - 1] = 0; // free last col for ellipsis\n    }\n\n    return <React.Fragment>\n        {\n            categoriesArr.map((category, idx) => {\n                const colsAvailable = colsAvailableArr[idx];\n                const isCategoryVisible = colsAvailable > 0;\n                const isCategoryLast = idx === categoriesArr.length - 1;\n                return (isCategoryVisible && (\n                    <React.Fragment key={`${category.key}_f`}>\n                        {renderCategory(category, colsAvailable, handleMenu)}\n                        {!isCategoryLast && (\n                            <div className={classes.verticalDivider}/>\n                        )}\n                    </React.Fragment>\n                ))\n            })\n        }\n        {categoriesMoreThanColumns && (\n            <Category>\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: [],\n                        categories: categoriesForMenu\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>)\n        }\n    </React.Fragment>\n\n};\n\nconst renderCategory = (category, colsAvailable, handleMenu) => {\n    const {label, icon, children} = category.props;\n    const items = React.Children.toArray(children);\n    if (colsAvailable === items.length) {\n        return (\n            <Category>\n                {items}\n            </Category>\n        )\n    } else if (colsAvailable === 1) {\n        return (\n            <Category key={category.key}>\n                <Button title={label} color=\"inherit\" onClick={(e) => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items,\n                        categories: []\n                    };\n                    handleMenu(menu)\n                }}>\n                    {icon}\n                    <ArrowDropDownIcon fontSize=\"small\"/>\n                </Button>\n            </Category>\n        )\n    } else {\n        const visibleItems = items.slice(0, colsAvailable - 1); // one column per ellipsis\n        const menuItems = items.slice(colsAvailable - 1, items.length);\n        return (\n            <Category>\n                {visibleItems}\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: menuItems,\n                        categories: []\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>\n        )\n    }\n};\n\nconst EllipsisButton = ({onClick}) => (\n    <Button title=\"More...\" color=\"inherit\" onClick={onClick}>\n        <MoreHorizIcon/>\n    </Button>\n);\n\nconst renderCategoryMenu = (category, isExpanded, handleExpanded, classes) => {\n    const {label, icon, children} = category.props;\n    const onCategoryItemClick = (e) => {\n        e.stopPropagation(); // prevent menu from closing\n        handleExpanded(category);\n    };\n    return [\n        <MenuItem color=\"inherit\" onClick={onCategoryItemClick}>\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText inset primary={label}/>\n            {isExpanded ? <ExpandLess/> : <ExpandMore/>}\n        </MenuItem>\n        ,\n        <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n            <List disablePadding>\n                {\n                    React.Children.map(children, child =>\n                        React.cloneElement(child, {asMenuItem: true, className: classes.nested})\n                    )\n                }\n            </List>\n        </Collapse>\n    ]\n};\n\nCatalogue.defaultProps = {\n    colsXs: 5,\n    colsSm: 9,\n    colsMd: 13,\n    colsLg: 18,\n    colsXl: 25\n};\n\nCatalogue.propTypes = {\n    classes: PropTypes.object.isRequired,\n    colsXs: PropTypes.number,\n    colsSm: PropTypes.number,\n    colsMd: PropTypes.number,\n    colsLg: PropTypes.number,\n    colsXl: PropTypes.number,\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nconst colsPropName = (width) => `cols${width.charAt(0).toUpperCase()}${width.charAt(1)}`;\n\n//TODO simplify rendering of categories and menu\nexport default withWidth()(withStyles(styles, {name: 'MuiTabs'})(Catalogue));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MenuItemWrapper extends React.Component {\n    render() {\n        const {children, ...otherProps} = this.props;\n        return children(otherProps);\n    }\n}\n\n\nMenuItemWrapper.propTypes = {\n    asMenuItem: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    icon: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.func.isRequired\n};\n\nexport default MenuItemWrapper;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nimport theme from './theme'\nimport Toolbar from './components/toolbar/';\nimport ToolbarHeader from './components/toolbar/header';\nimport ToolbarContent from './components/toolbar/content';\nimport Catalogue from './components/toolbar/content/catalogue';\nimport Category from './components/toolbar/content/catalogue/category';\nimport ItemHoc from './components/toolbar/menu/item';\n\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatIndentDecreaseIcon from '@material-ui/icons/FormatIndentDecrease';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone';\nimport TextRotateVerticalIcon from '@material-ui/icons/TextRotateVertical';\nimport TextRotateUpIcon from '@material-ui/icons/TextRotateUp';\nimport TextRotationDownIcon from '@material-ui/icons/TextRotationDown';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport MusicNote from '@material-ui/icons/MusicNote';\n\n\nconst actionButton = ({label, icon, onClick}) => (\n    <IconButton title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </IconButton>\n);\n\nconst renderActionButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : actionButton(otherProps);\n};\n\nconst toolbarButton = ({icon, label, onClick}) => (\n    <Button title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </Button>\n);\n\nconst renderToolbarButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : toolbarButton(otherProps);\n};\n\nconst menuItem = ({icon, label, onClick, ...otherProps}) => (\n    <MenuItem color=\"inherit\" onClick={onClick} {...otherProps}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText inset primary={label}/>\n    </MenuItem>\n);\n\nconst header = (\n    <ToolbarHeader title=\"Page Title\" onMenuButtonClick={console.log}>\n        <ItemHoc label=\"Search\" icon={<SearchIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Notifications\" icon={<NotificationsIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Settings\" icon={<SettingsIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n        <ItemHoc label=\"Exit\" icon={<ExitToAppIcon/>} onClick={console.log}>\n            {renderActionButtonOrMenuItem}\n        </ItemHoc>\n    </ToolbarHeader>\n);\n\nconst content = (\n    <ToolbarContent>\n        <Catalogue label=\"Catalogue\" icon={<BarChartIcon/>}>\n            <Category label=\"List format\" icon={<Brightness1Icon/>}>\n                <ItemHoc label=\"List numbered\" icon={<FormatListNumberedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"List bulleted\" icon={<FormatListBulletedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"List numbered rtl\" icon={<FormatListNumberedRtlIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Font\" icon={<Brightness2Icon/>}>\n                <ItemHoc label=\"Format bold\" icon={<FormatBoldIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Format italic\" icon={<FormatItalicIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Format underlined\" icon={<FormatUnderlinedIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Indent\" icon={<Brightness3Icon/>}>\n                <ItemHoc label=\"Indent decrease\" icon={<FormatIndentDecreaseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Indent increase\" icon={<FormatIndentIncreaseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Emails\" icon={<Brightness4Icon/>}>\n                <ItemHoc label=\"Just email\" icon={<AlternateEmailIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Cloud\" icon={<Brightness5Icon/>}>\n                <ItemHoc label=\"Default\" icon={<CloudIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Upload\" icon={<CloudUploadIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Download\" icon={<CloudDownloadIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Text alignment\" icon={<Brightness6Icon/>}>\n                <ItemHoc label=\"Align left\" icon={<FormatAlignLeftIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align center\" icon={<FormatAlignCenterIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align right\" icon={<FormatAlignRightIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Align justify\" icon={<FormatAlignJustifyIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n            <Category label=\"Text rotation\" icon={<Brightness7Icon/>}>\n                <ItemHoc label=\"Rotation none\" icon={<TextRotationNoneIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotate vertical\" icon={<TextRotateVerticalIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotate up\" icon={<TextRotateUpIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Rotation down\" icon={<TextRotationDownIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n        </Catalogue>\n        <Catalogue label=\"Cattwo\" icon={<SwapVerticalCircleIcon/>}>\n            <Category label=\"Player\" icon={<MusicNote/>}>\n                <ItemHoc label=\"Previous\" icon={<SkipPreviousIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Play\" icon={<PlayArrowIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Pause\" icon={<PauseIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Stop\" icon={<StopIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n                <ItemHoc label=\"Next\" icon={<SkipNextIcon/>} onClick={console.log}>\n                    {renderToolbarButtonOrMenuItem}\n                </ItemHoc>\n            </Category>\n        </Catalogue>\n        <Catalogue label=\"Cattwo\" icon={<SwapVerticalCircleIcon/>}/>\n        <Catalogue label=\"Catthree\" icon={<BarChartIcon/>}/>\n        <Catalogue label=\"Catfour\" icon={<SwapVerticalCircleIcon/>}/>\n        <Catalogue label=\"Catfive\" icon={<BarChartIcon/>}/>\n        <Catalogue label=\"Catsix\" icon={<SwapVerticalCircleIcon/>}/>\n        <Catalogue label=\"Catseven\" icon={<BarChartIcon/>}/>\n        <Catalogue label=\"Cateight\" icon={<SwapVerticalCircleIcon/>}/>\n        <Catalogue label=\"Catnine\" icon={<BarChartIcon/>}/>\n    </ToolbarContent>\n);\n\n\nconst App = () => (\n    <React.Fragment>\n        <CssBaseline>\n            <MuiThemeProvider theme={theme}>\n                <Toolbar header={header} content={content}/>\n            </MuiThemeProvider>\n        </CssBaseline>\n    </React.Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}