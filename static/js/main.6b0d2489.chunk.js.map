{"version":3,"sources":["components/customtabs/index.js","components/toolbar/button/index.js","components/toolbar/header/index.js","components/toolbar/header/action/index.js","components/toolbar/index.js","App.js","serviceWorker.js","index.js"],"names":["Tabs","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scrollerStyle","marginBottom","showLeftScroll","showRightScroll","mounted","getConditionalElements","_this$props","props","classes","scrollable","ScrollButtonComponent","scrollButtons","theme","conditionalElements","scrollbarSizeListener","react_default","a","createElement","ScrollbarSize_default","onChange","handleScrollbarSizeChange","showScrollButtons","scrollButtonLeft","direction","onClick","handleLeftScrollClick","visible","className","classNames","defineProperty","scrollButtonsAuto","scrollButtonRight","handleRightScrollClick","getTabsMeta","value","tabsMeta","tabMeta","tabsRef","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollLeftNormalized","getNormalizedScrollLeft","scrollWidth","left","right","children","length","tab","valueToIndex","get","warning","concat","keys","Array","from","join","moveTabsScroll","scrollbarHeight","setState","delta","multiplier","nextScrollLeft","invert","detectScrollType","scroll","scrollSelectedIntoView","_this$props2","_this$getTabsMeta","animate","updateScrollButtonState","_this$props3","_this$tabsRef","window","handleResize","debounce","handleTabsScroll","prevProps","prevState","clear","_classNames4","_this2","_this$props4","centered","classNameProp","Component","component","fullWidth","other","textColor","objectWithoutProperties","root","flexContainerClassName","flexContainer","scrollerClassName","scroller","fixed","assign","react_event_listener_cjs_default","target","onResize","style","ref","role","onScroll","React","defaultProps","TabScrollButton","withStyles","overflow","minHeight","WebkitOverflowScrolling","display","justifyContent","position","flex","whiteSpace","overflowX","width","breakpoints","down","name","withTheme","ToolbarButton","icon","label","expandable","Button_default","color","ArrowDropDown_default","fontSize","minWidth","ToolbarHeader","anchorEl","handleMenu","event","currentTarget","handleClose","title","onMenuButtonClick","isWidthUpSm","isWidthUp","primaryChildren","Children","toArray","filter","child","primary","buttonsChildren","otherChildren","menuChildren","Toolbar_default","IconButton_default","menuButton","Menu_default","Typography_default","variant","noWrap","grow","map","renderActionButton","MoreVert_default","core_Menu_default","open","Boolean","onClose","renderMenuItem","action","_action$props","_action$props2","MenuItem_default","ListItemIcon_default","ListItemText_default","inset","withWidth","flexGrow","marginRight","HeaderAction","Toolbar","activeTab","handleTabChange","AppBar_default","header","console","log","header_action","Search_default","Notifications_default","Settings_default","ExitToApp_default","Divider_default","Tabs_default","Tab_default","BarChartRounded_default","SwapVerticalCircle_default","customtabs","disableGutters","toolbar_button","FormatListNumbered_default","Hidden_default","xsDown","FormatListBulleted_default","smDown","FormatIndentDecrease_default","FormatIndentIncrease_default","FormatAlignLeft_default","FormatAlignCenter_default","FormatAlignRight_default","FormatAlignJustify_default","MoreHoriz_default","divider","FormatColorText_default","leftIcon","mdUp","backgroundColor","palette","marginTop","spacing","unit","marginLeft","tabRoot","textTransform","search","borderRadius","shape","fade","common","white","&:hover","up","searchIcon","height","pointerEvents","alignItems","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","createMuiTheme","type","main","secondary","values","xs","sm","md","lg","xl","App","Fragment","CssBaseline_default","core_styles","toolbar","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b0d2489.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport classNames from 'classnames';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\nimport {detectScrollType, getNormalizedScrollLeft} from 'normalize-scroll-left';\nimport {componentPropType} from '@material-ui/utils';\nimport animate from '@material-ui/core/internal/animate';\nimport ScrollbarSize from '@material-ui/core/Tabs/ScrollbarSize';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TabScrollButton from '@material-ui/core/Tabs/TabScrollButton';\n\nexport const styles = theme => ({\n    /* Styles applied to the root element. */\n    root: {\n        overflow: 'hidden',\n        minHeight: 48,\n        WebkitOverflowScrolling: 'touch', // Add iOS momentum scrolling.\n    },\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n        display: 'flex',\n    },\n    /* Styles applied to the flex container element if `centered={true}` & `scrollable={false}`. */\n    centered: {\n        justifyContent: 'center',\n    },\n    /* Styles applied to the tablist element. */\n    scroller: {\n        position: 'relative',\n        display: 'inline-block',\n        flex: '1 1 auto',\n        whiteSpace: 'nowrap',\n    },\n    /* Styles applied to the tablist element if `scrollable={false}`. */\n    fixed: {\n        overflowX: 'hidden',\n        width: '100%',\n    },\n    /* Styles applied to the tablist element if `scrollable={true}`. */\n    scrollable: {\n        overflowX: 'scroll',\n    },\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"`. */\n    scrollButtonsAuto: {\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n        },\n    }\n});\n\nclass Tabs extends React.Component {\n    constructor() {\n        super();\n        if (typeof window !== 'undefined') {\n            this.handleResize = debounce(() => {\n                this.updateScrollButtonState();\n            }, 166); // Corresponds to 10 frames at 60 Hz.\n\n            this.handleTabsScroll = debounce(() => {\n                this.updateScrollButtonState();\n            }, 166); // Corresponds to 10 frames at 60 Hz.\n        }\n    }\n\n    state = {\n        scrollerStyle: {\n            marginBottom: 0,\n        },\n        showLeftScroll: false,\n        showRightScroll: false,\n        mounted: false,\n    };\n\n    componentDidMount() {\n        this.setState({mounted: true});\n        this.updateScrollButtonState();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateScrollButtonState();\n    }\n\n    componentWillUnmount() {\n        this.handleResize.clear();\n        this.handleTabsScroll.clear();\n    }\n\n    getConditionalElements = () => {\n        const {classes, scrollable, ScrollButtonComponent, scrollButtons, theme} = this.props;\n        const conditionalElements = {};\n        conditionalElements.scrollbarSizeListener = scrollable ? (\n            <ScrollbarSize onChange={this.handleScrollbarSizeChange}/>\n        ) : null;\n\n        const showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');\n\n        conditionalElements.scrollButtonLeft = showScrollButtons ? (\n            <ScrollButtonComponent\n                direction={theme && theme.direction === 'rtl' ? 'right' : 'left'}\n                onClick={this.handleLeftScrollClick}\n                visible={this.state.showLeftScroll}\n                className={classNames(classes.scrollButtons, {\n                    [classes.scrollButtonsAuto]: scrollButtons === 'auto',\n                })}\n            />\n        ) : null;\n\n        conditionalElements.scrollButtonRight = showScrollButtons ? (\n            <ScrollButtonComponent\n                direction={theme && theme.direction === 'rtl' ? 'left' : 'right'}\n                onClick={this.handleRightScrollClick}\n                visible={this.state.showRightScroll}\n                className={classNames(classes.scrollButtons, {\n                    [classes.scrollButtonsAuto]: scrollButtons === 'auto',\n                })}\n            />\n        ) : null;\n\n        return conditionalElements;\n    };\n\n    getTabsMeta = (value, direction) => {\n        let tabsMeta;\n        if (this.tabsRef) {\n            const rect = this.tabsRef.getBoundingClientRect();\n            // create a new object with ClientRect class props + scrollLeft\n            tabsMeta = {\n                clientWidth: this.tabsRef.clientWidth,\n                scrollLeft: this.tabsRef.scrollLeft,\n                scrollLeftNormalized: getNormalizedScrollLeft(this.tabsRef, direction),\n                scrollWidth: this.tabsRef.scrollWidth,\n                left: rect.left,\n                right: rect.right,\n            };\n        }\n\n        let tabMeta;\n        if (this.tabsRef && value !== false) {\n            const children = this.tabsRef.children[0].children;\n\n            if (children.length > 0) {\n                const tab = children[this.valueToIndex.get(value)];\n                warning(\n                    tab,\n                    [\n                        `Material-UI: the value provided \\`${value}\\` to the Tabs component is invalid.`,\n                        'None of the Tabs children have this value.',\n                        this.valueToIndex.keys\n                            ? `You can provide one of the following values: ${Array.from(\n                            this.valueToIndex.keys(),\n                            ).join(', ')}.`\n                            : null,\n                    ].join('\\n'),\n                );\n                tabMeta = tab ? tab.getBoundingClientRect() : null;\n            }\n        }\n        return {tabsMeta, tabMeta};\n    };\n\n    handleLeftScrollClick = () => {\n        this.moveTabsScroll(-this.tabsRef.clientWidth);\n    };\n\n    handleRightScrollClick = () => {\n        this.moveTabsScroll(this.tabsRef.clientWidth);\n    };\n\n    handleScrollbarSizeChange = scrollbarHeight => {\n        this.setState({\n            scrollerStyle: {\n                marginBottom: -scrollbarHeight,\n            },\n        });\n    };\n\n    moveTabsScroll = delta => {\n        const {theme} = this.props;\n\n        const multiplier = theme.direction === 'rtl' ? -1 : 1;\n        const nextScrollLeft = this.tabsRef.scrollLeft + delta * multiplier;\n        // Fix for Edge\n        const invert = theme.direction === 'rtl' && detectScrollType() === 'reverse' ? -1 : 1;\n        this.scroll(invert * nextScrollLeft);\n    };\n\n    scrollSelectedIntoView = () => {\n        const {theme, value} = this.props;\n        const {tabsMeta, tabMeta} = this.getTabsMeta(value, theme.direction);\n\n        if (!tabMeta || !tabsMeta) {\n            return;\n        }\n\n        if (tabMeta.left < tabsMeta.left) {\n            // left side of button is out of view\n            const nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);\n            this.scroll(nextScrollLeft);\n        } else if (tabMeta.right > tabsMeta.right) {\n            // right side of button is out of view\n            const nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);\n            this.scroll(nextScrollLeft);\n        }\n    };\n\n    scroll = value => {\n        animate('scrollLeft', this.tabsRef, value);\n    };\n\n    updateScrollButtonState = () => {\n        const {scrollable, scrollButtons, theme} = this.props;\n\n        if (scrollable && scrollButtons !== 'off') {\n            const {scrollWidth, clientWidth} = this.tabsRef;\n            const scrollLeft = getNormalizedScrollLeft(this.tabsRef, theme.direction);\n\n            const showLeftScroll =\n                theme.direction === 'rtl' ? scrollWidth > clientWidth + scrollLeft : scrollLeft > 0;\n\n            const showRightScroll =\n                theme.direction === 'rtl' ? scrollLeft > 0 : scrollWidth > clientWidth + scrollLeft;\n\n            if (\n                showLeftScroll !== this.state.showLeftScroll ||\n                showRightScroll !== this.state.showRightScroll\n            ) {\n                this.setState({showLeftScroll, showRightScroll});\n            }\n        }\n    };\n\n    render() {\n        const {\n            centered,\n            children,\n            classes,\n            className: classNameProp,\n            component: Component,\n            fullWidth,\n            onChange,\n            scrollable,\n            ScrollButtonComponent,\n            scrollButtons,\n            textColor,\n            theme,\n            value,\n            ...other\n        } = this.props;\n\n        warning(\n            !centered || !scrollable,\n            'Material-UI: you can not use the `centered={true}` and `scrollable={true}` properties ' +\n            'at the same time on a `Tabs` component.',\n        );\n\n        const className = classNames(classes.root, classNameProp);\n        const flexContainerClassName = classNames(classes.flexContainer, {\n            [classes.centered]: centered && !scrollable,\n        });\n        const scrollerClassName = classNames(classes.scroller, {\n            [classes.fixed]: !scrollable,\n            [classes.scrollable]: scrollable,\n        });\n\n        const conditionalElements = this.getConditionalElements();\n\n        return (\n            <Component className={className} {...other}>\n                <EventListener target=\"window\" onResize={this.handleResize}/>\n                {conditionalElements.scrollbarSizeListener}\n                <div className={classes.flexContainer}>\n                    {conditionalElements.scrollButtonLeft}\n                    <div\n                        className={scrollerClassName}\n                        style={this.state.scrollerStyle}\n                        ref={ref => {\n                            this.tabsRef = ref;\n                        }}\n                        role=\"tablist\"\n                        onScroll={this.handleTabsScroll}\n                    >\n                        <div className={flexContainerClassName}>{children}</div>\n                    </div>\n                    {conditionalElements.scrollButtonRight}\n                </div>\n            </Component>\n        );\n    }\n}\n\nTabs.propTypes = {\n    /**\n     * If `true`, the tabs will be centered.\n     * This property is intended for large views.\n     */\n    centered: PropTypes.bool,\n    /**\n     * The content of the component.\n     */\n    children: PropTypes.node,\n    /**\n     * Override or extend the styles applied to the component.\n     * See [CSS API](#css-api) below for more details.\n     */\n    classes: PropTypes.object.isRequired,\n    /**\n     * @ignore\n     */\n    className: PropTypes.string,\n    /**\n     * The component used for the root node.\n     * Either a string to use a DOM element or a component.\n     */\n    component: componentPropType,\n    /**\n     * If `true`, the tabs will grow to use all the available space.\n     * This property is intended for small views, like on mobile.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Callback fired when the value changes.\n     *\n     * @param {object} event The event source of the callback\n     * @param {number} value We default to the index of the child\n     */\n    onChange: PropTypes.func,\n    /**\n     * True invokes scrolling properties and allow for horizontally scrolling\n     * (or swiping) the tab bar.\n     */\n    scrollable: PropTypes.bool,\n    /**\n     * The component used to render the scroll buttons.\n     */\n    ScrollButtonComponent: componentPropType,\n    /**\n     * Determine behavior of scroll buttons when tabs are set to scroll\n     * `auto` will only present them on medium and larger viewports\n     * `on` will always present them\n     * `off` will never present them\n     */\n    scrollButtons: PropTypes.oneOf(['auto', 'on', 'off']),\n    /**\n     * Determines the color of the `Tab`.\n     */\n    textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object.isRequired,\n    /**\n     * The value of the currently selected `Tab`.\n     * If you don't want any selected `Tab`, you can set this property to `false`.\n     */\n    value: PropTypes.any,\n};\n\nTabs.defaultProps = {\n    centered: false,\n    component: 'div',\n    fullWidth: false,\n    scrollable: false,\n    ScrollButtonComponent: TabScrollButton,\n    scrollButtons: 'auto',\n    textColor: 'inherit',\n};\n\n//TODO remove me\nexport default withStyles(styles, {name: 'MuiTabs', withTheme: true})(Tabs);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button/Button\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst styles = (theme) => ({\n    root: {\n        minWidth: 36\n    }\n});\n\nclass ToolbarButton extends React.Component {\n\n    render() {\n        const {classes, icon, label, expandable} = this.props;\n        return (\n            <Button color=\"inherit\">\n                {icon}\n                {label}\n                {expandable && <ArrowDropDownIcon fontSize=\"small\"/>}\n            </Button>\n        );\n    }\n}\n\nToolbarButton.propTypes = {\n    classes: PropTypes.object.isRequired,\n    icon: PropTypes.node.isRequired,\n    label: PropTypes.string,\n    expandable: PropTypes.bool\n};\n\n//TODO refactor me\nexport default withStyles(styles, {name: 'MuiButton'})(ToolbarButton);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport withWidth, {isWidthUp} from \"@material-ui/core/withWidth\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = (theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: '12px'\n    }\n});\n\nclass ToolbarHeader extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenu = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render() {\n        const {classes, title, width, onMenuButtonClick, children} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n\n        const primaryChildren = React.Children.toArray(children)\n            .filter(child => child.props.primary);\n        const buttonsChildren = isWidthUpSm ? primaryChildren : [];\n\n        const otherChildren = React.Children.toArray(children)\n            .filter(child => !child.props.primary);\n        const menuChildren = isWidthUpSm ? otherChildren : primaryChildren.concat(otherChildren);\n\n        return (\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={onMenuButtonClick}>\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    {title}\n                </Typography>\n                <div className={classes.grow}/>\n                {\n                    React.Children.map(buttonsChildren, renderActionButton)\n                }\n                {\n                    menuChildren.length !== 0 && (\n                        <div>\n                            <IconButton color=\"inherit\" onClick={this.handleMenu}>\n                                <MoreIcon/>\n                            </IconButton>\n                            <Menu\n                                anchorEl={this.state.anchorEl}\n                                open={Boolean(this.state.anchorEl)}\n                                onClick={this.handleClose}\n                                onClose={this.handleClose}\n                            >\n                                {\n                                    React.Children.map(menuChildren, renderMenuItem)\n                                }\n                            </Menu>\n                        </div>\n                    )\n                }\n\n            </Toolbar>\n        );\n    }\n}\n\nconst renderActionButton = (action) => {\n    const {icon, onClick} = action.props;\n    return (\n        <IconButton color=\"inherit\" onClick={onClick}>\n            {icon}\n        </IconButton>\n    )\n};\n\nconst renderMenuItem = (action) => {\n    const {icon, label, onClick} = action.props;\n    return (\n        <MenuItem color=\"inherit\" onClick={onClick}>\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText inset primary={label}/>\n        </MenuItem>\n    )\n};\n\nToolbarHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    onMenuButtonClick: PropTypes.func.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default withWidth()(withStyles(styles)(ToolbarHeader));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass HeaderAction extends React.Component {\n    render() {\n        return null;\n    }\n}\n\nHeaderAction.propTypes = {\n    primary: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    icon: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default HeaderAction;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MuiTab from \"@material-ui/core/Tab/Tab\";\nimport MuiTabs from \"@material-ui/core/Tabs/Tabs\";\nimport Divider from '@material-ui/core/Divider';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BarChartRoundedIcon from '@material-ui/icons/BarChartRounded';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport FormatColorIcon from '@material-ui/icons/FormatColorText';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatIndentDecreaseIcon from '@material-ui/icons/FormatIndentDecrease';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport withWidth, {isWidthUp} from '@material-ui/core/withWidth';\nimport {fade} from '@material-ui/core/styles/colorManipulator';\n\nimport CustomTabs from '../customtabs'\nimport ToolbarButton from '../toolbar/button'\nimport ToolbarHeader from './header'\nimport HeaderAction from './header/action'\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\n\nconst styles = theme => ({\n    divider: {\n        minWidth: '1px',\n        display: 'flex',\n        position: 'relative',\n        backgroundColor: theme.palette.divider,\n        marginTop: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit,\n        marginBottom: theme.spacing.unit * 2,\n        marginLeft: theme.spacing.unit\n    },\n    tabRoot: {\n        textTransform: 'initial'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    menuButton: {\n        minHeight: theme.spacing.unit,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n});\n\nclass Toolbar extends React.Component {\n    state = {\n        activeTab: 0\n    };\n\n    handleTabChange = (event, value) => {\n        this.setState({activeTab: value});\n    };\n\n\n    render() {\n        const {activeTab} = this.state;\n        const {classes, width} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n\n        return (\n            <MuiAppBar position=\"static\">\n                <ToolbarHeader title=\"Page Title\" onMenuButtonClick={() => console.log('menu button clicked')}>\n                    <HeaderAction\n                        primary\n                        label=\"Search\"\n                        icon={<SearchIcon/>}\n                        onClick={() => console.log('search action')}/>\n                    <HeaderAction\n                        primary\n                        label=\"Notifications\"\n                        icon={<NotificationsIcon/>}\n                        onClick={() => console.log('notification action')}/>\n                    <HeaderAction\n                        label=\"Settings\"\n                        icon={<SettingsIcon/>}\n                        onClick={() => console.log('settings action')}/>\n                    <HeaderAction\n                        label=\"Exit\"\n                        icon={<ExitToAppIcon/>}\n                        onClick={() => console.log('exit action')}/>\n                </ToolbarHeader>\n                <Divider variant=\"middle\"/>\n                <MuiTabs\n                    scrollable={true}\n                    scrollButtons=\"auto\"\n                    value={activeTab}\n                    onChange={this.handleTabChange}\n                >\n                    <MuiTab label=\"Catalogue\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Cattwo\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catthree\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Catfour\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catfive\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Catsix\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catseven\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Cateight\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catnine\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                </MuiTabs>\n                <Divider variant=\"middle\"/>\n                {activeTab === 0 &&\n                <CustomTabs\n                    scrollable={true}\n                    scrollButtons=\"auto\"\n                    value={activeTab}\n                    onChange={this.handleTabChange}\n                >\n                    <MuiToolbar disableGutters={true}>\n                        <ToolbarButton icon={<FormatListNumberedIcon/>} expandable={true}/>\n                        <Hidden xsDown>\n                            <ToolbarButton icon={<FormatListBulletedIcon/>} expandable={true}/>\n                        </Hidden>\n                        <Hidden smDown>\n                            <ToolbarButton icon={<FormatIndentDecreaseIcon/>}/>\n                            <ToolbarButton icon={<FormatIndentIncreaseIcon/>}/>\n                            <ToolbarButton icon={<FormatAlignLeftIcon/>}/>\n                        </Hidden>\n                        <ToolbarButton icon={<FormatAlignCenterIcon/>}/>\n                        <ToolbarButton icon={<FormatAlignRightIcon/>}/>\n                        <Hidden xsDown>\n                            <ToolbarButton icon={<FormatAlignJustifyIcon/>}/>\n                        </Hidden>\n                        <ToolbarButton icon={<MoreIcon/>}/>\n                    </MuiToolbar>\n                    <div className={classes.divider}/>\n                    <MuiToolbar disableGutters={true}>\n                        <Hidden smDown>\n                            <ToolbarButton\n                                icon={<FormatColorIcon className={classes.leftIcon}/>} label=\"Styles\"\n                                expandable={true}/>\n                        </Hidden>\n                        <Hidden mdUp>\n                            <ToolbarButton\n                                icon={<FormatColorIcon/>}\n                                expandable={true}/>\n                        </Hidden>\n                    </MuiToolbar>\n                    <div className={classes.divider}/>\n                    <MuiToolbar disableGutters={true}>\n                        <Hidden smDown>\n                            <ToolbarButton\n                                icon={<SearchIcon className={classes.leftIcon}/>} label=\"Find\"\n                                expandable={true}/>\n                        </Hidden>\n                        <Hidden mdUp>\n                            <ToolbarButton\n                                icon={<SearchIcon/>}\n                                expandable={true}/>\n                        </Hidden>\n                    </MuiToolbar>\n                </CustomTabs>\n                }\n            </MuiAppBar>\n        );\n    }\n}\n\nToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n//TODO refactor me\nexport default withWidth()(withStyles(styles)(Toolbar));","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Toolbar from './components/toolbar/';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport {fade} from \"@material-ui/core/styles/colorManipulator\";\nimport common from \"@material-ui/core/colors/common\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        divider: fade(common.white, 0.25),\n        primary: {\n            main: '#111'\n        },\n        secondary: {\n            main: '#e6e6e6'\n        }\n    },\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920\n        }\n        // values: {\n        //     xs: 0,\n        //     sm: 600,\n        //     md: 840,\n        //     lg: 1284,\n        //     xl: 1920\n        // }\n    }\n});\n\nconst App = () => (\n    <React.Fragment>\n        <CssBaseline>\n            <MuiThemeProvider theme={theme}>\n                <Toolbar/>\n            </MuiThemeProvider>\n        </CssBaseline>\n    </React.Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}