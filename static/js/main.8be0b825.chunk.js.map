{"version":3,"sources":["components/toolbar/header/index.js","components/toolbar/catalogue/category/index.js","utils/grouping/index.js","components/toolbar/catalogue/index.js","components/toolbar/menu/item/index.js","components/toolbar/index.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["ToolbarHeader","state","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","_this$props","this","props","classes","title","width","onMenuButtonClick","children","isWidthUpSm","isWidthUp","childrenArr","React","Children","toArray","primaryChildren","filter","child","primary","buttonsChildren","otherChildren","menuChildren","concat","react_default","a","createElement","Toolbar_default","IconButton_default","color","className","menuButton","onClick","Menu_default","Typography_default","variant","noWrap","grow","length","MoreVert_default","core_Menu_default","getContentAnchorEl","anchorOrigin","vertical","horizontal","open","Boolean","onClose","map","cloneElement","asMenuItem","Component","withWidth","withStyles","theme","flexGrow","marginRight","Category","disableGutters","name","group","colsNeededArr","colsTotal","colsNeeded","idx","colsCounter","colsNeededArrCounter","colsFree","Catalogue","menu","expanded","handleExpanded","category","indexOf","c","prevProps","_this2","console","log","root","renderCategories","Menu_Menu_default","transformOrigin","items","item","categories","isExpanded","renderCategoryMenu","categoriesArr","categoriesForMenu","categoriesMoreThanColumns","slice","count","colsAvailableArr","Fragment","colsAvailable","isCategoryVisible","isCategoryLast","key","renderCategory","verticalDivider","catalogue_category","catalogue_EllipsisButton","e","_category$props","label","icon","Button_default","ArrowDropDown_default","fontSize","visibleItems","menuItems","EllipsisButton","_ref","MoreHoriz_default","_category$props2","MenuItem_default","stopPropagation","ListItemIcon_default","ListItemText_default","inset","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","nested","Object","defineProperty","minWidth","display","position","backgroundColor","lighten","palette","main","marginTop","spacing","unit","breakpoints","only","overflow","paddingLeft","MenuItemWrapper","objectWithoutProperties","Toolbar","activeTab","handleTabChange","value","isWidthUpMd","AppBar_default","header","menu_item","Search_default","renderActionButtonOrMenuItem","Notifications_default","Settings_default","ExitToApp_default","Tabs_default","scrollable","scrollButtons","onChange","Tab_default","BarChartRounded_default","SwapVerticalCircle_default","catalogue","Filter1_default","FormatListNumbered_default","renderToolbarButtonOrMenuItem","FormatListBulleted_default","FormatListNumberedRtl_default","Filter2_default","FormatBold_default","FormatItalic_default","FormatUnderlined_default","Filter3_default","FormatIndentDecrease_default","FormatIndentIncrease_default","Filter4_default","AlternateEmail_default","Filter5_default","Cloud_default","CloudUpload_default","CloudDownload_default","Filter6_default","FormatAlignLeft_default","FormatAlignCenter_default","FormatAlignRight_default","FormatAlignJustify_default","Filter7_default","TextRotationNone_default","TextRotateVertical_default","TextRotateUp_default","TextRotationDown_default","_ref2","otherProps","menuItem","IconButton_IconButton_default","actionButton","_ref4","_ref3","Button_Button_default","toolbarButton","_ref5","assign","ListItemIcon_ListItemIcon_default","ListItemText_ListItemText_default","leftIcon","createMuiTheme","type","common","black","secondary","typography","useNextVariants","App","CssBaseline_default","core_styles","toolbar","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8be0b825.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport withWidth, {isWidthUp} from \"@material-ui/core/withWidth\";\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = (theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: '12px'\n    }\n});\n\nclass ToolbarHeader extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenu = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render() {\n        const {classes, title, width, onMenuButtonClick, children} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n\n        const childrenArr = React.Children.toArray(children);\n        const primaryChildren = childrenArr.filter(child => child.props.primary);\n        const buttonsChildren = isWidthUpSm ? primaryChildren : [];\n\n        const otherChildren = childrenArr.filter(child => !child.props.primary);\n        const menuChildren = isWidthUpSm ? otherChildren : primaryChildren.concat(otherChildren);\n\n        return (\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={onMenuButtonClick}>\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    {title}\n                </Typography>\n                <div className={classes.grow}/>\n                {\n                    buttonsChildren\n                }\n                {\n                    menuChildren.length > 0 && (\n                        <div>\n                            <IconButton title=\"More...\" color=\"inherit\" onClick={this.handleMenu}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                            <Menu\n                                anchorEl={this.state.anchorEl}\n                                getContentAnchorEl={null}\n                                anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}}\n                                open={Boolean(this.state.anchorEl)}\n                                onClick={this.handleClose}\n                                onClose={this.handleClose}\n                            >\n                                {\n                                    React.Children.map(menuChildren, child =>\n                                        React.cloneElement(child, {asMenuItem: true}))\n                                }\n                            </Menu>\n                        </div>\n                    )\n                }\n            </Toolbar>\n        );\n    }\n}\n\nToolbarHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    onMenuButtonClick: PropTypes.func.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\n//TODO add properties\nexport default withWidth()(withStyles(styles)(ToolbarHeader));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst styles = (theme) => ({\n});\n\nclass Category extends React.Component {\n\n    render() {\n        const {children} = this.props;\n        return (\n            <Toolbar disableGutters={true}>\n                {children}\n            </Toolbar>\n        );\n    }\n}\n\nCategory.propTypes = {\n    classes: PropTypes.object.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default withStyles(styles, {name: 'MuiToolbar'})(Category);","const group = (colsNeededArr, colsTotal) => {\n    if (colsNeededArr.length > colsTotal) {\n        return colsNeededArr.map((colsNeeded, idx) => ((idx + 1) <= colsTotal) ? 1 : 0);\n    } else {\n        let colsCounter = 0;\n        let colsNeededArrCounter = 0;\n        return colsNeededArr.map((colsNeeded) => {\n            colsNeededArrCounter++;\n            const colsFree = (colsTotal - colsCounter) - (colsNeededArr.length - colsNeededArrCounter);\n            if (colsFree >= colsNeeded) {\n                colsCounter += colsNeeded;\n                return colsNeeded;\n            } else {\n                if (colsFree > 1) {\n                    colsCounter += colsFree;\n                    return colsFree;\n                } else {\n                    colsCounter += 1;\n                    return 1;\n                }\n            }\n        });\n    }\n};\n\n//TODO add tests\nexport default group;","import React from 'react';\nimport Category from \"./category\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from \"@material-ui/core/Menu/Menu\";\nimport {withStyles} from '@material-ui/core/styles';\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport group from '../../../utils/grouping'\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\n\nconst styles = (theme) => ({\n    verticalDivider: {\n        minWidth: '1px',\n        display: 'flex',\n        position: 'relative',\n        backgroundColor: lighten(theme.palette.primary.main, 0.25),\n        marginTop: theme.spacing.unit * 1.5,\n        [theme.breakpoints.only('xs')]: {\n            marginTop: theme.spacing.unit\n        }\n    },\n    root: {\n        display: 'flex',\n        overflow: 'hidden',\n        backgroundColor: lighten(theme.palette.primary.main, 0.37)\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    }\n});\n\nclass Catalogue extends React.Component {\n\n    state = {\n        menu: null,\n        expanded: []\n    };\n\n    handleMenu = (menu) => {\n        this.setState({\n            menu\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            menu: null,\n            expanded: []\n        });\n    };\n\n    handleExpanded = (category) => {\n        let expanded = this.state.expanded;\n        if (expanded.indexOf(category) !== -1) {\n            expanded = expanded.filter(c => c !== category);\n        } else {\n            expanded = expanded.concat([category]);\n        }\n        this.setState({\n            expanded\n        });\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.width !== prevProps.width) {\n            this.handleClose();\n        }\n    }\n\n    render() {\n        const {children, classes, width} = this.props;\n\n        let colsTotal = 0;\n        if (width === 'xl') {\n            colsTotal = 25;\n        } else if (width === 'lg') {\n            colsTotal = 18;\n        } else if (width === 'md') {\n            colsTotal = 13;\n        } else if (width === 'sm') {\n            colsTotal = 9;\n        } else {\n            colsTotal = 5;\n        }\n        console.log(width + ' (' + colsTotal + ')');\n\n        return (\n            <div className={classes.root}>\n                {\n                    renderCategories(children, colsTotal, this.handleMenu, classes)\n                }\n                {this.state.menu && (\n                    <Menu\n                        anchorEl={this.state.menu.anchorEl}\n                        open={Boolean(this.state.menu)}\n                        onClick={this.handleClose}\n                        onClose={this.handleClose}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                        transformOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                    >\n                        {\n                            this.state.menu.items.map((item) =>\n                                React.cloneElement(item, {asMenuItem: true}))\n                        }\n                        {\n                            this.state.menu.categories.map(category => {\n                                const isExpanded = this.state.expanded.indexOf(category) !== -1;\n                                return renderCategoryMenu(category, isExpanded, this.handleExpanded, classes)\n                            })\n                        }\n                    </Menu>)\n                }\n            </div>\n        );\n    }\n}\n\nconst renderCategories = (categories, colsTotal, handleMenu, classes) => {\n    const categoriesArr = React.Children.toArray(categories);\n\n    let categoriesForMenu = [];\n    const categoriesMoreThanColumns = categoriesArr.length > colsTotal;\n    if (categoriesMoreThanColumns) {\n        categoriesForMenu = categoriesArr.slice(colsTotal - 1, categoriesArr.length);\n    }\n\n    const colsNeededArr = categoriesArr.map(category =>\n        React.Children.count(category.props.children));\n    const colsAvailableArr = group(colsNeededArr, colsTotal);\n    if (categoriesMoreThanColumns) {\n        colsAvailableArr[colsTotal - 1] = 0; // free last col for ellipsis\n    }\n\n    return <React.Fragment>\n        {\n            categoriesArr.map((category, idx) => {\n                const colsAvailable = colsAvailableArr[idx];\n                const isCategoryVisible = colsAvailable > 0;\n                const isCategoryLast = idx === categoriesArr.length - 1;\n                return (isCategoryVisible && (\n                    <React.Fragment key={`${category.key}_f`}>\n                        {renderCategory(category, colsAvailable, handleMenu)}\n                        {!isCategoryLast && (\n                            <div className={classes.verticalDivider}/>\n                        )}\n                    </React.Fragment>\n                ))\n            })\n        }\n        {categoriesMoreThanColumns && (\n            <Category>\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: [],\n                        categories: categoriesForMenu\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>)\n        }\n    </React.Fragment>\n\n};\n\nconst renderCategory = (category, colsAvailable, handleMenu) => {\n    const {label, icon, children} = category.props;\n    const items = React.Children.toArray(children);\n    if (colsAvailable === items.length) {\n        return (\n            <Category>\n                {items}\n            </Category>\n        )\n    } else if (colsAvailable === 1) {\n        return (\n            <Category key={category.key}>\n                <Button title={label} color=\"inherit\" onClick={(e) => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items,\n                        categories: []\n                    };\n                    handleMenu(menu)\n                }}>\n                    {icon}\n                    <ArrowDropDownIcon fontSize=\"small\"/>\n                </Button>\n            </Category>\n        )\n    } else {\n        const visibleItems = items.slice(0, colsAvailable - 1); // one column per ellipsis\n        const menuItems = items.slice(colsAvailable - 1, items.length);\n        return (\n            <Category>\n                {visibleItems}\n                <EllipsisButton onClick={e => {\n                    const menu = {\n                        anchorEl: e.currentTarget,\n                        items: menuItems,\n                        categories: []\n                    };\n                    handleMenu(menu);\n                }}/>\n            </Category>\n        )\n    }\n};\n\nconst EllipsisButton = ({onClick}) => (\n    <Button title=\"More...\" color=\"inherit\" onClick={onClick}>\n        <MoreHorizIcon/>\n    </Button>\n);\n\nconst renderCategoryMenu = (category, isExpanded, handleExpanded, classes) => {\n    const {label, icon, children} = category.props;\n    const onCategoryItemClick = (e) => {\n        e.stopPropagation(); // prevent menu from closing\n        handleExpanded(category);\n    };\n    return [\n        <MenuItem color=\"inherit\" onClick={onCategoryItemClick}>\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText inset primary={label}/>\n            {isExpanded ? <ExpandLess/> : <ExpandMore/>}\n        </MenuItem>\n        ,\n        <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n            <List disablePadding>\n                {\n                    React.Children.map(children, child =>\n                        React.cloneElement(child, {asMenuItem: true, className: classes.nested})\n                    )\n                }\n            </List>\n        </Collapse>\n    ]\n};\n\nCatalogue.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n//TODO add props, simplify renderCategory\nexport default withWidth()(withStyles(styles, {name: 'MuiTabs'})(Catalogue));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MenuItemWrapper extends React.Component {\n    render() {\n        const {children, ...otherProps} = this.props;\n        return children(otherProps);\n    }\n}\n\n\nMenuItemWrapper.propTypes = {\n    asMenuItem: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    icon: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.func.isRequired\n};\n\nexport default MenuItemWrapper;","import React from 'react';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiTab from \"@material-ui/core/Tab/Tab\";\nimport MuiTabs from \"@material-ui/core/Tabs/Tabs\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport BarChartRoundedIcon from '@material-ui/icons/BarChartRounded';\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatIndentDecreaseIcon from '@material-ui/icons/FormatIndentDecrease';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport Filter1Icon from '@material-ui/icons/Filter1';\nimport Filter2Icon from '@material-ui/icons/Filter2';\nimport Filter3Icon from '@material-ui/icons/Filter3';\nimport Filter4Icon from '@material-ui/icons/Filter4';\nimport Filter5Icon from '@material-ui/icons/Filter5';\nimport Filter6Icon from '@material-ui/icons/Filter6';\nimport Filter7Icon from '@material-ui/icons/Filter7';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone';\nimport TextRotateVerticalIcon from '@material-ui/icons/TextRotateVertical';\nimport TextRotateUpIcon from '@material-ui/icons/TextRotateUp';\nimport TextRotationDownIcon from '@material-ui/icons/TextRotationDown';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ToolbarHeader from './header'\nimport Category from './catalogue/category'\nimport Catalogue from './catalogue'\nimport MenuItemWrapper from './menu/item'\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport PropTypes from 'prop-types';\nimport withWidth, {isWidthUp} from \"@material-ui/core/withWidth\";\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\nconst styles = theme => ({\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    }\n});\n\nclass Toolbar extends React.Component {\n    state = {\n        activeTab: 0\n    };\n\n    handleTabChange = (event, value) => {\n        this.setState({activeTab: value});\n    };\n\n    render() {\n        const {activeTab} = this.state;\n        const {width} = this.props;\n        const isWidthUpSm = isWidthUp('sm', width);\n        const isWidthUpMd = isWidthUp('md', width);\n\n        return (\n            <MuiAppBar position=\"static\">\n                <ToolbarHeader title=\"Page Title\" onMenuButtonClick={console.log}>\n                    <MenuItemWrapper\n                        primary\n                        label=\"Search\"\n                        icon={<SearchIcon/>}\n                        onClick={console.log}\n                    >\n                        {renderActionButtonOrMenuItem}\n                    </MenuItemWrapper>\n                    <MenuItemWrapper\n                        primary\n                        label=\"Notifications\"\n                        icon={<NotificationsIcon/>}\n                        onClick={console.log}\n                    >\n                        {renderActionButtonOrMenuItem}\n                    </MenuItemWrapper>\n                    <MenuItemWrapper\n                        label=\"Settings\"\n                        icon={<SettingsIcon/>}\n                        onClick={console.log}\n                    >\n                        {renderActionButtonOrMenuItem}\n                    </MenuItemWrapper>\n                    <MenuItemWrapper\n                        label=\"Exit\"\n                        icon={<ExitToAppIcon/>}\n                        onClick={console.log}\n                    >\n                        {renderActionButtonOrMenuItem}\n                    </MenuItemWrapper>\n                </ToolbarHeader>\n                <MuiTabs\n                    scrollable\n                    scrollButtons={isWidthUpMd ? \"on\" : \"off\"}\n                    value={activeTab}\n                    onChange={this.handleTabChange}\n                >\n                    <MuiTab label=\"Catalogue\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Cattwo\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catthree\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Catfour\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catfive\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Catsix\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catseven\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                    <MuiTab label=\"Cateight\" icon={isWidthUpSm && <SwapVerticalCircleIcon/>}/>\n                    <MuiTab label=\"Catnine\" icon={isWidthUpSm && <BarChartRoundedIcon/>}/>\n                </MuiTabs>\n                {activeTab === 0 &&\n                <Catalogue>\n                    <Category label=\"List format\" icon={<Filter1Icon/>}>\n                        <MenuItemWrapper label=\"List numbered\" icon={<FormatListNumberedIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"List bulleted\" icon={<FormatListBulletedIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"List numbered rtl\" icon={<FormatListNumberedRtlIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Font\" icon={<Filter2Icon/>}>\n                        <MenuItemWrapper label=\"Format bold\" icon={<FormatBoldIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Format italic\" icon={<FormatItalicIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Format underlined\" icon={<FormatUnderlinedIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Indent\" icon={<Filter3Icon/>}>\n                        <MenuItemWrapper label=\"Indent decrease\" icon={<FormatIndentDecreaseIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Indent increase\" icon={<FormatIndentIncreaseIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Emails\" icon={<Filter4Icon/>}>\n                        <MenuItemWrapper label=\"Just waves\" icon={<AlternateEmailIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Cloud\" icon={<Filter5Icon/>}>\n                        <MenuItemWrapper label=\"Default\" icon={<CloudIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Upload\" icon={<CloudUploadIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Download\" icon={<CloudDownloadIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Text alignment\" icon={<Filter6Icon/>}>\n                        <MenuItemWrapper label=\"Align left\" icon={<FormatAlignLeftIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Align center\" icon={<FormatAlignCenterIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Align right\" icon={<FormatAlignRightIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Align justify\" icon={<FormatAlignJustifyIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                    <Category label=\"Text rotation\" icon={<Filter7Icon/>}>\n                        <MenuItemWrapper label=\"Rotation none\" icon={<TextRotationNoneIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Rotate vertical\" icon={<TextRotateVerticalIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Rotate up\" icon={<TextRotateUpIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                        <MenuItemWrapper label=\"Rotation down\" icon={<TextRotationDownIcon/>}\n                                         onClick={console.log}>\n                            {renderToolbarButtonOrMenuItem}\n                        </MenuItemWrapper>\n                    </Category>\n                </Catalogue>\n                }\n            </MuiAppBar>\n        );\n    }\n}\n\nconst actionButton = ({label, icon, onClick}) => (\n    <IconButton title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </IconButton>\n);\n\nconst renderActionButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : actionButton(otherProps);\n};\n\nconst toolbarButton = ({icon, label, onClick}) => (\n    <Button title={label} color=\"inherit\" onClick={onClick}>\n        {icon}\n    </Button>\n);\n\nconst renderToolbarButtonOrMenuItem = ({asMenuItem, ...otherProps}) => {\n    return asMenuItem ? menuItem(otherProps) : toolbarButton(otherProps);\n};\n\nconst menuItem = ({icon, label, onClick, ...otherProps}) => (\n    <MenuItem color=\"inherit\" onClick={onClick} {...otherProps}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText inset primary={label}/>\n    </MenuItem>\n);\n\nToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n//TODO create ToolbarContent and Button, hide tabs, extract init data to App\nexport default withWidth()(withStyles(styles)(Toolbar));","import {createMuiTheme} from \"@material-ui/core\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport common from \"@material-ui/core/colors/common\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: lighten(common.black, 0.13)\n        },\n        secondary: {\n            main: lighten(common.black, 0.84)\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n    // breakpoints: {\n    //     values: {\n    //         xs: 0,\n    //         sm: 600,\n    //         md: 840,\n    //         lg: 1284,\n    //         xl: 1920\n    //     }\n    // }\n});\n\nexport default theme;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {MuiThemeProvider} from \"@material-ui/core\";\n\nimport Toolbar from './components/toolbar/';\nimport theme from './theme'\n\nconst App = () => (\n    <React.Fragment>\n        <CssBaseline>\n            <MuiThemeProvider theme={theme}>\n                <Toolbar/>\n            </MuiThemeProvider>\n        </CssBaseline>\n    </React.Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}